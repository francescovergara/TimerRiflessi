

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Aug 05 13:23:52 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F1220 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   112                           LATA equ 0F89h ;# 
   113  0000                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   114                           LATB equ 0F8Ah ;# 
   115  0000                     # 708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   116                           TRISA equ 0F92h ;# 
   117  0000                     # 713 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   118                           DDRA equ 0F92h ;# 
   119  0000                     # 910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   120                           TRISB equ 0F93h ;# 
   121  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   122                           DDRB equ 0F93h ;# 
   123  0000                     # 1132 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   124                           OSCTUNE equ 0F9Bh ;# 
   125  0000                     # 1190 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   126                           PIE1 equ 0F9Dh ;# 
   127  0000                     # 1256 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   128                           PIR1 equ 0F9Eh ;# 
   129  0000                     # 1322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   130                           IPR1 equ 0F9Fh ;# 
   131  0000                     # 1388 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   132                           PIE2 equ 0FA0h ;# 
   133  0000                     # 1429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   134                           PIR2 equ 0FA1h ;# 
   135  0000                     # 1470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   136                           IPR2 equ 0FA2h ;# 
   137  0000                     # 1511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   138                           EECON1 equ 0FA6h ;# 
   139  0000                     # 1577 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   140                           EECON2 equ 0FA7h ;# 
   141  0000                     # 1584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   142                           EEDATA equ 0FA8h ;# 
   143  0000                     # 1591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   144                           EEADR equ 0FA9h ;# 
   145  0000                     # 1598 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   146                           BAUDCTL equ 0FAAh ;# 
   147  0000                     # 1662 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   148                           RCSTA equ 0FABh ;# 
   149  0000                     # 1667 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   150                           RCSTA1 equ 0FABh ;# 
   151  0000                     # 1872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   152                           TXSTA equ 0FACh ;# 
   153  0000                     # 1877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   154                           TXSTA1 equ 0FACh ;# 
   155  0000                     # 2128 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   156                           TXREG equ 0FADh ;# 
   157  0000                     # 2133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   158                           TXREG1 equ 0FADh ;# 
   159  0000                     # 2140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   160                           RCREG equ 0FAEh ;# 
   161  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   162                           RCREG1 equ 0FAEh ;# 
   163  0000                     # 2152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   164                           SPBRG equ 0FAFh ;# 
   165  0000                     # 2157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   166                           SPBRG1 equ 0FAFh ;# 
   167  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   168                           SPBRGH equ 0FB0h ;# 
   169  0000                     # 2171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   170                           T3CON equ 0FB1h ;# 
   171  0000                     # 2283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   172                           TMR3 equ 0FB2h ;# 
   173  0000                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   174                           TMR3L equ 0FB2h ;# 
   175  0000                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   176                           TMR3H equ 0FB3h ;# 
   177  0000                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   178                           ECCPAS equ 0FB6h ;# 
   179  0000                     # 2386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   180                           PWM1CON equ 0FB7h ;# 
   181  0000                     # 2456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   182                           CCP1CON equ 0FBDh ;# 
   183  0000                     # 2553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   184                           CCPR1 equ 0FBEh ;# 
   185  0000                     # 2560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   186                           CCPR1L equ 0FBEh ;# 
   187  0000                     # 2567 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   188                           CCPR1H equ 0FBFh ;# 
   189  0000                     # 2574 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   190                           ADCON2 equ 0FC0h ;# 
   191  0000                     # 2645 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   192                           ADCON1 equ 0FC1h ;# 
   193  0000                     # 2730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   194                           ADCON0 equ 0FC2h ;# 
   195  0000                     # 2870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   196                           ADRES equ 0FC3h ;# 
   197  0000                     # 2877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   198                           ADRESL equ 0FC3h ;# 
   199  0000                     # 2884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   200                           ADRESH equ 0FC4h ;# 
   201  0000                     # 2891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   202                           T2CON equ 0FCAh ;# 
   203  0000                     # 2962 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   204                           PR2 equ 0FCBh ;# 
   205  0000                     # 2967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   206                           MEMCON equ 0FCBh ;# 
   207  0000                     # 3072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   208                           TMR2 equ 0FCCh ;# 
   209  0000                     # 3079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   210                           T1CON equ 0FCDh ;# 
   211  0000                     # 3184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   212                           TMR1 equ 0FCEh ;# 
   213  0000                     # 3191 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   214                           TMR1L equ 0FCEh ;# 
   215  0000                     # 3198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   216                           TMR1H equ 0FCFh ;# 
   217  0000                     # 3205 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   218                           RCON equ 0FD0h ;# 
   219  0000                     # 3332 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   220                           WDTCON equ 0FD1h ;# 
   221  0000                     # 3360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   222                           LVDCON equ 0FD2h ;# 
   223  0000                     # 3425 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   224                           OSCCON equ 0FD3h ;# 
   225  0000                     # 3509 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   226                           T0CON equ 0FD5h ;# 
   227  0000                     # 3586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   228                           TMR0 equ 0FD6h ;# 
   229  0000                     # 3593 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   230                           TMR0L equ 0FD6h ;# 
   231  0000                     # 3600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   232                           TMR0H equ 0FD7h ;# 
   233  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   234                           STATUS equ 0FD8h ;# 
   235  0000                     # 3678 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   236                           FSR2 equ 0FD9h ;# 
   237  0000                     # 3685 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   238                           FSR2L equ 0FD9h ;# 
   239  0000                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   240                           FSR2H equ 0FDAh ;# 
   241  0000                     # 3699 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   242                           PLUSW2 equ 0FDBh ;# 
   243  0000                     # 3706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   244                           PREINC2 equ 0FDCh ;# 
   245  0000                     # 3713 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   246                           POSTDEC2 equ 0FDDh ;# 
   247  0000                     # 3720 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   248                           POSTINC2 equ 0FDEh ;# 
   249  0000                     # 3727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   250                           INDF2 equ 0FDFh ;# 
   251  0000                     # 3734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   252                           BSR equ 0FE0h ;# 
   253  0000                     # 3741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   254                           FSR1 equ 0FE1h ;# 
   255  0000                     # 3748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   256                           FSR1L equ 0FE1h ;# 
   257  0000                     # 3755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   258                           FSR1H equ 0FE2h ;# 
   259  0000                     # 3762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   260                           PLUSW1 equ 0FE3h ;# 
   261  0000                     # 3769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   262                           PREINC1 equ 0FE4h ;# 
   263  0000                     # 3776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   264                           POSTDEC1 equ 0FE5h ;# 
   265  0000                     # 3783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   266                           POSTINC1 equ 0FE6h ;# 
   267  0000                     # 3790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   268                           INDF1 equ 0FE7h ;# 
   269  0000                     # 3797 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   270                           WREG equ 0FE8h ;# 
   271  0000                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   272                           FSR0 equ 0FE9h ;# 
   273  0000                     # 3816 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   274                           FSR0L equ 0FE9h ;# 
   275  0000                     # 3823 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   276                           FSR0H equ 0FEAh ;# 
   277  0000                     # 3830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   278                           PLUSW0 equ 0FEBh ;# 
   279  0000                     # 3837 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   280                           PREINC0 equ 0FECh ;# 
   281  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   282                           POSTDEC0 equ 0FEDh ;# 
   283  0000                     # 3851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   284                           POSTINC0 equ 0FEEh ;# 
   285  0000                     # 3858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   286                           INDF0 equ 0FEFh ;# 
   287  0000                     # 3865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   288                           INTCON3 equ 0FF0h ;# 
   289  0000                     # 3957 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   290                           INTCON2 equ 0FF1h ;# 
   291  0000                     # 4034 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   292                           INTCON equ 0FF2h ;# 
   293  0000                     # 4165 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   294                           PROD equ 0FF3h ;# 
   295  0000                     # 4172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   296                           PRODL equ 0FF3h ;# 
   297  0000                     # 4179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   298                           PRODH equ 0FF4h ;# 
   299  0000                     # 4186 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   300                           TABLAT equ 0FF5h ;# 
   301  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   302                           TBLPTR equ 0FF6h ;# 
   303  0000                     # 4202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   304                           TBLPTRL equ 0FF6h ;# 
   305  0000                     # 4209 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   306                           TBLPTRH equ 0FF7h ;# 
   307  0000                     # 4216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   308                           TBLPTRU equ 0FF8h ;# 
   309  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   310                           PCLAT equ 0FF9h ;# 
   311  0000                     # 4232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   312                           PC equ 0FF9h ;# 
   313  0000                     # 4239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   314                           PCL equ 0FF9h ;# 
   315  0000                     # 4246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   316                           PCLATH equ 0FFAh ;# 
   317  0000                     # 4253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   318                           PCLATU equ 0FFBh ;# 
   319  0000                     # 4260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   320                           STKPTR equ 0FFCh ;# 
   321  0000                     # 4366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   322                           TOS equ 0FFDh ;# 
   323  0000                     # 4373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   324                           TOSL equ 0FFDh ;# 
   325  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   326                           TOSH equ 0FFEh ;# 
   327  0000                     # 4387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f1220.h"
   328                           TOSU equ 0FFFh ;# 
   329  0000                     	FNCALL	_main,_initUart
   330                           	FNCALL	_main,_setUartInterrupt
   331                           	FNROOT	_main
   332                           	FNCALL	_ISR,___lmul
   333                           	FNCALL	_ISR,_handleRX
   334                           	FNCALL	_ISR,_handleTX
   335                           	FNCALL	_ISR,_ltoa
   336                           	FNCALL	_ISR,_memset
   337                           	FNCALL	_ISR,_startTX
   338                           	FNCALL	_ISR,_stopTimer0
   339                           	FNCALL	_ISR,_strcat
   340                           	FNCALL	_ISR,_strcpy
   341                           	FNCALL	_ISR,_strlen
   342                           	FNCALL	_strcat,_strcpy
   343                           	FNCALL	_strcat,_strlen
   344                           	FNCALL	_ltoa,___lldiv
   345                           	FNCALL	_ltoa,___llmod
   346                           	FNCALL	_handleTX,_clearBufferTx
   347                           	FNCALL	_clearBufferTx,_memset
   348                           	FNCALL	_handleRX,_clearBufferRx
   349                           	FNCALL	_handleRX,_startTX
   350                           	FNCALL	_handleRX,_startTimer0
   351                           	FNCALL	_clearBufferRx,_memset
   352                           	FNCALL	intlevel2,_ISR
   353                           	global	intlevel2
   354                           	FNROOT	intlevel2
   355                           	global	_timer
   356                           	global	_bufferRxSize
   357                           	global	_bufferTxByteSend
   358                           	global	_bufferTxSize
   359                           	global	_bufferRx
   360                           	global	_bufferTx
   361                           	global	_useTxInterrupt
   362                           psect	nvCOMRAM,class=COMRAM,space=1,noexec
   363                           global __pnvCOMRAM
   364                           __pnvCOMRAM:
   365  000048                     	global	_useTxInterrupt
   366                           _useTxInterrupt:
   367  000048                            ds      2
   368  000048                     	global	_TMR0L
   369                           _TMR0L	set	0xFD6
   370  0000                     	global	_T0CONbits
   371                           _T0CONbits	set	0xFD5
   372  0000                     	global	_TXREG
   373                           _TXREG	set	0xFAD
   374  0000                     	global	_TRISAbits
   375                           _TRISAbits	set	0xF92
   376  0000                     	global	_RCREG
   377                           _RCREG	set	0xFAE
   378  0000                     	global	_PORTAbits
   379                           _PORTAbits	set	0xF80
   380  0000                     	global	_PIR1bits
   381                           _PIR1bits	set	0xF9E
   382  0000                     	global	_IPR1bits
   383                           _IPR1bits	set	0xF9F
   384  0000                     	global	_PIE1bits
   385                           _PIE1bits	set	0xF9D
   386  0000                     	global	_SPBRG
   387                           _SPBRG	set	0xFAF
   388  0000                     	global	_RCONbits
   389                           _RCONbits	set	0xFD0
   390  0000                     	global	_INTCONbits
   391                           _INTCONbits	set	0xFF2
   392  0000                     	global	_TRISBbits
   393                           _TRISBbits	set	0xF93
   394  0000                     	global	_ADCON1bits
   395                           _ADCON1bits	set	0xFC1
   396  0000                     	global	_TXIF
   397                           _TXIF	set	0x7CF4
   398  0000                     	global	_CREN
   399                           _CREN	set	0x7D5C
   400  0000                     	global	_TXEN
   401                           _TXEN	set	0x7D65
   402  0000                     	global	_RX9
   403                           _RX9	set	0x7D5E
   404  0000                     	global	_TX9
   405                           _TX9	set	0x7D66
   406  0000                     	global	_SPEN
   407                           _SPEN	set	0x7D5F
   408  0000                     	global	_BRG16
   409                           _BRG16	set	0x7D53
   410  0000                     	global	_BRGH
   411                           _BRGH	set	0x7D62
   412  0000                     	global	_SYNC
   413                           _SYNC	set	0x7D64
   414  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   415                           global __psmallconst
   416                           __psmallconst:
   417  0001EA                     	db	0
   418  0001EA  00                 	
   419                           STR_1:
   420  0001EB                     	db	70	;'F'
   421  0001EB  46                 	db	73	;'I'
   422  0001EC  49                 	db	78	;'N'
   423  0001ED  4E                 	db	69	;'E'
   424  0001EE  45                 	db	58	;':'
   425  0001EF  3A                 	db	32
   426  0001F0  20                 	db	0
   427  0001F1  00                 	
   428                           STR_2:
   429  0001F2                     	db	13
   430  0001F2  0D                 	db	10
   431  0001F3  0A                 	db	0
   432  0001F4  00                 ; #config settings
   433                           global __CFG_OSC$HS
   434                           __CFG_OSC$HS equ 0x0
   435  0000                     global __CFG_FSCM$OFF
   436                           __CFG_FSCM$OFF equ 0x0
   437  0000                     global __CFG_IESO$OFF
   438                           __CFG_IESO$OFF equ 0x0
   439  0000                     global __CFG_PWRT$ON
   440                           __CFG_PWRT$ON equ 0x0
   441  0000                     global __CFG_BOR$OFF
   442                           __CFG_BOR$OFF equ 0x0
   443  0000                     global __CFG_WDT$OFF
   444                           __CFG_WDT$OFF equ 0x0
   445  0000                     global __CFG_WDTPS$32768
   446                           __CFG_WDTPS$32768 equ 0x0
   447  0000                     global __CFG_MCLRE$OFF
   448                           __CFG_MCLRE$OFF equ 0x0
   449  0000                     global __CFG_STVR$ON
   450                           __CFG_STVR$ON equ 0x0
   451  0000                     global __CFG_LVP$OFF
   452                           __CFG_LVP$OFF equ 0x0
   453  0000                     global __CFG_CP0$OFF
   454                           __CFG_CP0$OFF equ 0x0
   455  0000                     global __CFG_CP1$OFF
   456                           __CFG_CP1$OFF equ 0x0
   457  0000                     global __CFG_CPB$OFF
   458                           __CFG_CPB$OFF equ 0x0
   459  0000                     global __CFG_CPD$OFF
   460                           __CFG_CPD$OFF equ 0x0
   461  0000                     global __CFG_WRT0$OFF
   462                           __CFG_WRT0$OFF equ 0x0
   463  0000                     global __CFG_WRT1$OFF
   464                           __CFG_WRT1$OFF equ 0x0
   465  0000                     global __CFG_WRTC$OFF
   466                           __CFG_WRTC$OFF equ 0x0
   467  0000                     global __CFG_WRTB$OFF
   468                           __CFG_WRTB$OFF equ 0x0
   469  0000                     global __CFG_WRTD$OFF
   470                           __CFG_WRTD$OFF equ 0x0
   471  0000                     global __CFG_EBTR0$OFF
   472                           __CFG_EBTR0$OFF equ 0x0
   473  0000                     global __CFG_EBTR1$OFF
   474                           __CFG_EBTR1$OFF equ 0x0
   475  0000                     global __CFG_EBTRB$OFF
   476                           __CFG_EBTRB$OFF equ 0x0
   477  0000                     	file	"C:\Users\franc\AppData\Local\Temp\sdd8."
   478                           	line	#
   479                           psect	cinit,class=CODE,delta=1,reloc=2
   480                           global __pcinit
   481                           __pcinit:
   482  0009F6                     global start_initialization
   483                           start_initialization:
   484  0009F6                     
   485                           global __initialization
   486                           __initialization:
   487  0009F6                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   488                           global __pbssCOMRAM
   489                           __pbssCOMRAM:
   490  00003E                     	global	_timer
   491                           _timer:
   492  00003E                            ds      4
   493  00003E                     	global	_bufferRxSize
   494                           _bufferRxSize:
   495  000042                            ds      2
   496  000042                     	global	_bufferTxByteSend
   497                           _bufferTxByteSend:
   498  000044                            ds      2
   499  000044                     	global	_bufferTxSize
   500                           _bufferTxSize:
   501  000046                            ds      2
   502  000046                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
   503                           global __pbssBANK0
   504                           __pbssBANK0:
   505  000080                     	global	_bufferRx
   506                           _bufferRx:
   507  000080                            ds      50
   508  000080                     	global	_bufferTx
   509                           _bufferTx:
   510  0000B2                            ds      50
   511  0000B2                     	file	"C:\Users\franc\AppData\Local\Temp\sdd8."
   512                           	line	#
   513                           psect	cinit
   514                           ; Clear objects allocated to BANK0 (100 bytes)
   515                           	global __pbssBANK0
   516                           lfsr	0,__pbssBANK0
   517  0009F6  EE00  F080         movlw	100
   518  0009FA  0E64               clear_0:
   519  0009FC                     clrf	postinc0,c
   520  0009FC  6AEE               decf	wreg
   521  0009FE  06E8               bnz	clear_0
   522  000A00  E1FD               ; Clear objects allocated to COMRAM (10 bytes)
   523                           	global __pbssCOMRAM
   524                           lfsr	0,__pbssCOMRAM
   525  000A02  EE00  F03E         movlw	10
   526  000A06  0E0A               clear_1:
   527  000A08                     clrf	postinc0,c
   528  000A08  6AEE               decf	wreg
   529  000A0A  06E8               bnz	clear_1
   530  000A0C  E1FD               psect cinit,class=CODE,delta=1
   531                           global end_of_initialization,__end_of__initialization
   532                           
   533                           ;End of C runtime variable initialization code
   534                           
   535                           end_of_initialization:
   536  000A0E                     __end_of__initialization:
   537  000A0E                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   538  000A0E  904A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   539  000A10  924A               	GLOBAL	__Lmediumconst
   540                           	movlw	low highword(__Lmediumconst)
   541  000A12  0E00               	movwf	tblptru
   542  000A14  6EF8               movlb 0
   543  000A16  0100               goto _main	;jump to C main() function
   544  000A18  EFB8  F004         psect	cstackBANK0,class=BANK0,space=1,noexec
   545                           global __pcstackBANK0
   546                           __pcstackBANK0:
   547  0000E4                     ??_initUart:	; 1 bytes @ 0x0
   548  0000E4                     ?_setUartInterrupt:	; 1 bytes @ 0x0
   549  0000E4                     	global	setUartInterrupt@status
   550                           setUartInterrupt@status:	; 2 bytes @ 0x0
   551  0000E4                     	ds   2
   552  0000E4                     	global	setUartInterrupt@priority
   553                           setUartInterrupt@priority:	; 2 bytes @ 0x2
   554  0000E6                     	ds   2
   555  0000E6                     ??_setUartInterrupt:	; 1 bytes @ 0x4
   556  0000E8                     ??_main:	; 1 bytes @ 0x4
   557  0000E8                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   558                           global __pcstackCOMRAM
   559                           __pcstackCOMRAM:
   560  000001                     ?_initUart:	; 1 bytes @ 0x0
   561  000001                     ?_handleRX:	; 1 bytes @ 0x0
   562  000001                     ?_handleTX:	; 1 bytes @ 0x0
   563  000001                     ?_stopTimer0:	; 1 bytes @ 0x0
   564  000001                     ??_stopTimer0:	; 1 bytes @ 0x0
   565  000001                     ?_startTX:	; 1 bytes @ 0x0
   566  000001                     ??_startTX:	; 1 bytes @ 0x0
   567  000001                     ?_clearBufferRx:	; 1 bytes @ 0x0
   568  000001                     ?_startTimer0:	; 1 bytes @ 0x0
   569  000001                     ??_startTimer0:	; 1 bytes @ 0x0
   570  000001                     ?_clearBufferTx:	; 1 bytes @ 0x0
   571  000001                     ?_main:	; 1 bytes @ 0x0
   572  000001                     ?_ISR:	; 1 bytes @ 0x0
   573  000001                     ?_memset:	; 2 bytes @ 0x0
   574  000001                     	global	?_strlen
   575                           ?_strlen:	; 2 bytes @ 0x0
   576  000001                     	global	?___lmul
   577                           ?___lmul:	; 4 bytes @ 0x0
   578  000001                     	global	?___lldiv
   579                           ?___lldiv:	; 4 bytes @ 0x0
   580  000001                     	global	?___llmod
   581                           ?___llmod:	; 4 bytes @ 0x0
   582  000001                     	global	memset@dest
   583                           memset@dest:	; 2 bytes @ 0x0
   584  000001                     	global	strlen@s
   585                           strlen@s:	; 2 bytes @ 0x0
   586  000001                     	global	___lmul@multiplier
   587                           ___lmul@multiplier:	; 4 bytes @ 0x0
   588  000001                     	global	___lldiv@dividend
   589                           ___lldiv@dividend:	; 4 bytes @ 0x0
   590  000001                     	global	___llmod@dividend
   591                           ___llmod@dividend:	; 4 bytes @ 0x0
   592  000001                     	ds   2
   593  000001                     ??_strlen:	; 1 bytes @ 0x2
   594  000003                     	global	memset@c
   595                           memset@c:	; 2 bytes @ 0x2
   596  000003                     	ds   2
   597  000003                     	global	memset@n
   598                           memset@n:	; 2 bytes @ 0x4
   599  000005                     	global	strlen@a
   600                           strlen@a:	; 2 bytes @ 0x4
   601  000005                     	global	___lmul@multiplicand
   602                           ___lmul@multiplicand:	; 4 bytes @ 0x4
   603  000005                     	global	___lldiv@divisor
   604                           ___lldiv@divisor:	; 4 bytes @ 0x4
   605  000005                     	global	___llmod@divisor
   606                           ___llmod@divisor:	; 4 bytes @ 0x4
   607  000005                     	ds   2
   608  000005                     ??_memset:	; 1 bytes @ 0x6
   609  000007                     ?_strcpy:	; 2 bytes @ 0x6
   610  000007                     	global	strcpy@dest
   611                           strcpy@dest:	; 2 bytes @ 0x6
   612  000007                     	ds   2
   613  000007                     ??___lmul:	; 1 bytes @ 0x8
   614  000009                     ??___lldiv:	; 1 bytes @ 0x8
   615  000009                     ??___llmod:	; 1 bytes @ 0x8
   616  000009                     	global	___llmod@counter
   617                           ___llmod@counter:	; 1 bytes @ 0x8
   618  000009                     	global	strcpy@src
   619                           strcpy@src:	; 2 bytes @ 0x8
   620  000009                     	global	___lmul@product
   621                           ___lmul@product:	; 4 bytes @ 0x8
   622  000009                     	global	___lldiv@quotient
   623                           ___lldiv@quotient:	; 4 bytes @ 0x8
   624  000009                     	ds   2
   625  000009                     ??_strcpy:	; 1 bytes @ 0xA
   626  00000B                     	global	memset@k
   627                           memset@k:	; 2 bytes @ 0xA
   628  00000B                     	ds   2
   629  00000B                     	global	___lldiv@counter
   630                           ___lldiv@counter:	; 1 bytes @ 0xC
   631  00000D                     	global	memset@s
   632                           memset@s:	; 2 bytes @ 0xC
   633  00000D                     	global	strcpy@s
   634                           strcpy@s:	; 2 bytes @ 0xC
   635  00000D                     	ds   1
   636  00000D                     ?_ltoa:	; 1 bytes @ 0xD
   637  00000E                     	global	ltoa@buffer
   638                           ltoa@buffer:	; 2 bytes @ 0xD
   639  00000E                     	ds   1
   640  00000E                     ??_handleRX:	; 1 bytes @ 0xE
   641  00000F                     ??_handleTX:	; 1 bytes @ 0xE
   642  00000F                     ??_clearBufferRx:	; 1 bytes @ 0xE
   643  00000F                     ??_clearBufferTx:	; 1 bytes @ 0xE
   644  00000F                     	global	strcpy@d
   645                           strcpy@d:	; 2 bytes @ 0xE
   646  00000F                     	ds   1
   647  00000F                     	global	ltoa@buffSize
   648                           ltoa@buffSize:	; 2 bytes @ 0xF
   649  000010                     	ds   1
   650  000010                     ?_strcat:	; 2 bytes @ 0x10
   651  000011                     	global	strcat@dest
   652                           strcat@dest:	; 2 bytes @ 0x10
   653  000011                     	ds   1
   654  000011                     	global	ltoa@value
   655                           ltoa@value:	; 4 bytes @ 0x11
   656  000012                     	ds   1
   657  000012                     	global	strcat@src
   658                           strcat@src:	; 2 bytes @ 0x12
   659  000013                     	ds   1
   660  000013                     	global	handleRX@i
   661                           handleRX@i:	; 2 bytes @ 0x13
   662  000014                     	ds   1
   663  000014                     ??_strcat:	; 1 bytes @ 0x14
   664  000015                     	ds   1
   665  000015                     ??_ltoa:	; 1 bytes @ 0x15
   666  000016                     	global	ltoa@original
   667                           ltoa@original:	; 4 bytes @ 0x15
   668  000016                     	ds   4
   669  000016                     	global	ltoa@pos
   670                           ltoa@pos:	; 2 bytes @ 0x19
   671  00001A                     	ds   2
   672  00001A                     	global	ltoa@c
   673                           ltoa@c:	; 2 bytes @ 0x1B
   674  00001C                     	ds   2
   675  00001C                     ??_ISR:	; 1 bytes @ 0x1D
   676  00001E                     	ds   8
   677  00001E                     	global	ISR@str
   678                           ISR@str:	; 20 bytes @ 0x25
   679  000026                     	ds   20
   680  000026                     	global	ISR@out
   681                           ISR@out:	; 4 bytes @ 0x39
   682  00003A                     	ds   4
   683  00003A                     ;!
   684                           ;!Data Sizes:
   685                           ;!    Strings     10
   686                           ;!    Constant    0
   687                           ;!    Data        0
   688                           ;!    BSS         110
   689                           ;!    Persistent  2
   690                           ;!    Stack       0
   691                           ;!
   692                           ;!Auto Spaces:
   693                           ;!    Space          Size  Autos    Used
   694                           ;!    COMRAM          126     61      73
   695                           ;!    BANK0           128      4     104
   696                           
   697                           ;!
   698                           ;!Pointer List with Targets:
   699                           ;!
   700                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 50
   701                           ;!		 -> bufferTx(BANK0[50]), 
   702                           ;!
   703                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 50
   704                           ;!		 -> bufferTx(BANK0[50]), 
   705                           ;!
   706                           ;!    strcpy@dest	PTR unsigned char  size(2) Largest target is 50
   707                           ;!		 -> bufferTx(BANK0[50]), 
   708                           ;!
   709                           ;!    strcpy@d	PTR unsigned char  size(2) Largest target is 50
   710                           ;!		 -> bufferTx(BANK0[50]), 
   711                           ;!
   712                           ;!    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
   713                           ;!		 -> STR_2(CODE[3]), STR_1(CODE[7]), ISR@str(COMRAM[20]), 
   714                           ;!
   715                           ;!    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
   716                           ;!		 -> STR_2(CODE[3]), STR_1(CODE[7]), ISR@str(COMRAM[20]), 
   717                           ;!
   718                           ;!    strcat@src	PTR const unsigned char  size(2) Largest target is 20
   719                           ;!		 -> STR_2(CODE[3]), ISR@str(COMRAM[20]), 
   720                           ;!
   721                           ;!    strcat@dest	PTR unsigned char  size(2) Largest target is 50
   722                           ;!		 -> bufferTx(BANK0[50]), 
   723                           ;!
   724                           ;!    memset@dest	PTR void  size(2) Largest target is 50
   725                           ;!		 -> bufferRx(BANK0[50]), bufferTx(BANK0[50]), ISR@str(COMRAM[20]), 
   726                           ;!
   727                           ;!    memset@s	PTR unsigned char  size(2) Largest target is 50
   728                           ;!		 -> bufferRx(BANK0[50]), bufferTx(BANK0[50]), ISR@str(COMRAM[20]), 
   729                           ;!
   730                           ;!    ltoa@buffer	PTR unsigned char  size(2) Largest target is 20
   731                           ;!		 -> ISR@str(COMRAM[20]), 
   732                           ;!
   733                           ;!    sp__strcat	PTR unsigned char  size(2) Largest target is 50
   734                           ;!		 -> bufferTx(BANK0[50]), 
   735                           ;!
   736                           ;!    sp__strcpy	PTR unsigned char  size(2) Largest target is 50
   737                           ;!		 -> bufferTx(BANK0[50]), 
   738                           ;!
   739                           ;!    sp__memset	PTR void  size(2) Largest target is 50
   740                           ;!		 -> bufferRx(BANK0[50]), bufferTx(BANK0[50]), ISR@str(COMRAM[20]), 
   741                           ;!
   742                           
   743                           
   744                           ;!
   745                           ;!Critical Paths under _main in COMRAM
   746                           ;!
   747                           ;!    None.
   748                           ;!
   749                           ;!Critical Paths under _ISR in COMRAM
   750                           ;!
   751                           ;!    _ISR->_ltoa
   752                           ;!    _strcat->_strcpy
   753                           ;!    _strcpy->_strlen
   754                           ;!    _ltoa->___lldiv
   755                           ;!    _clearBufferTx->_memset
   756                           ;!    _clearBufferRx->_memset
   757                           ;!
   758                           ;!Critical Paths under _main in BANK0
   759                           ;!
   760                           ;!    _main->_setUartInterrupt
   761                           ;!
   762                           ;!Critical Paths under _ISR in BANK0
   763                           ;!
   764                           ;!    None.
   765                           
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   768 ;;
   769                           
   770                           ;!
   771                           ;!Call Graph Tables:
   772                           ;!
   773                           ;! ---------------------------------------------------------------------------------
   774                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   775                           ;! ---------------------------------------------------------------------------------
   776                           ;! (0) _main                                                 0     0      0     304
   777                           ;!                           _initUart
   778                           ;!                   _setUartInterrupt
   779                           ;! ---------------------------------------------------------------------------------
   780                           ;! (1) _setUartInterrupt                                     4     0      4     304
   781                           ;!                                              0 BANK0      4     0      4
   782                           ;! ---------------------------------------------------------------------------------
   783                           ;! (1) _initUart                                             0     0      0       0
   784                           ;! ---------------------------------------------------------------------------------
   785                           ;! Estimated maximum stack depth 1
   786                           ;! ---------------------------------------------------------------------------------
   787                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   788                           ;! ---------------------------------------------------------------------------------
   789                           ;! (2) _ISR                                                 32    32      0    7543
   790                           ;!                                             29 COMRAM    32    32      0
   791                           ;!                             ___lmul
   792                           ;!                           _handleRX
   793                           ;!                           _handleTX
   794                           ;!                               _ltoa
   795                           ;!                             _memset
   796                           ;!                            _startTX
   797                           ;!                         _stopTimer0
   798                           ;!                             _strcat
   799                           ;!                             _strcpy
   800                           ;!                             _strlen
   801                           ;! ---------------------------------------------------------------------------------
   802                           ;! (3) _strcat                                               4     0      4    1018
   803                           ;!                                             16 COMRAM     4     0      4
   804                           ;!                             _strcpy
   805                           ;!                             _strlen
   806                           ;! ---------------------------------------------------------------------------------
   807                           ;! (3) _strlen                                               6     4      2     242
   808                           ;!                                              0 COMRAM     6     4      2
   809                           ;! ---------------------------------------------------------------------------------
   810                           ;! (3) _strcpy                                              10     6      4     400
   811                           ;!                                              6 COMRAM    10     6      4
   812                           ;!                             _strlen (ARG)
   813                           ;! ---------------------------------------------------------------------------------
   814                           ;! (3) _stopTimer0                                           0     0      0       0
   815                           ;! ---------------------------------------------------------------------------------
   816                           ;! (3) _ltoa                                                16     8      8    1122
   817                           ;!                                             13 COMRAM    16     8      8
   818                           ;!                            ___lldiv
   819                           ;!                            ___llmod
   820                           ;! ---------------------------------------------------------------------------------
   821                           ;! (4) ___llmod                                              9     1      8     311
   822                           ;!                                              0 COMRAM     9     1      8
   823                           ;! ---------------------------------------------------------------------------------
   824                           ;! (4) ___lldiv                                             13     5      8     314
   825                           ;!                                              0 COMRAM    13     5      8
   826                           ;! ---------------------------------------------------------------------------------
   827                           ;! (3) _handleTX                                             4     4      0    1403
   828                           ;!                                             14 COMRAM     4     4      0
   829                           ;!                      _clearBufferTx
   830                           ;! ---------------------------------------------------------------------------------
   831                           ;! (4) _clearBufferTx                                        0     0      0    1403
   832                           ;!                             _memset
   833                           ;! ---------------------------------------------------------------------------------
   834                           ;! (3) _handleRX                                             7     7      0    1471
   835                           ;!                                             14 COMRAM     7     7      0
   836                           ;!                      _clearBufferRx
   837                           ;!                            _startTX
   838                           ;!                        _startTimer0
   839                           ;! ---------------------------------------------------------------------------------
   840                           ;! (4) _startTimer0                                          0     0      0       0
   841                           ;! ---------------------------------------------------------------------------------
   842                           ;! (3) _startTX                                              4     4      0       0
   843                           ;!                                              0 COMRAM     4     4      0
   844                           ;! ---------------------------------------------------------------------------------
   845                           ;! (4) _clearBufferRx                                        0     0      0    1403
   846                           ;!                             _memset
   847                           ;! ---------------------------------------------------------------------------------
   848                           ;! (3) _memset                                              14     8      6    1403
   849                           ;!                                              0 COMRAM    14     8      6
   850                           ;! ---------------------------------------------------------------------------------
   851                           ;! (3) ___lmul                                              12     4      8     370
   852                           ;!                                              0 COMRAM    12     4      8
   853                           ;! ---------------------------------------------------------------------------------
   854                           ;! Estimated maximum stack depth 4
   855                           ;! ---------------------------------------------------------------------------------
   856                           ;!
   857                           ;! Call Graph Graphs:
   858                           ;!
   859                           ;! _main (ROOT)
   860                           ;!   _initUart
   861                           ;!   _setUartInterrupt
   862                           ;!
   863                           ;! _ISR (ROOT)
   864                           ;!   ___lmul
   865                           ;!   _handleRX
   866                           ;!     _clearBufferRx
   867                           ;!       _memset
   868                           ;!     _startTX
   869                           ;!     _startTimer0
   870                           ;!   _handleTX
   871                           ;!     _clearBufferTx
   872                           ;!       _memset
   873                           ;!   _ltoa
   874                           ;!     ___lldiv
   875                           ;!     ___llmod
   876                           ;!   _memset
   877                           ;!   _startTX
   878                           ;!   _stopTimer0
   879                           ;!   _strcat
   880                           ;!     _strcpy
   881                           ;!       _strlen (ARG)
   882                           ;!     _strlen
   883                           ;!   _strcpy
   884                           ;!     _strlen (ARG)
   885                           ;!   _strlen
   886                           ;!
   887                           
   888                           ;! Address spaces:
   889                           
   890                           ;!Name               Size   Autos  Total    Cost      Usage
   891                           ;!EEDATA             100      0       0       0        0.0%
   892                           ;!BIGRAM              FF      0       0       6        0.0%
   893                           ;!BITBANK0            80      0       0       3        0.0%
   894                           ;!BANK0               80      4      68       4       81.3%
   895                           ;!BITCOMRAM           7E      0       0       0        0.0%
   896                           ;!COMRAM              7E     3D      49       1       57.9%
   897                           ;!BITSFR               0      0       0     200        0.0%
   898                           ;!SFR                  0      0       0     200        0.0%
   899                           ;!STACK                0      0       0       2        0.0%
   900                           ;!NULL                 0      0       0       0        0.0%
   901                           ;!ABS                  0      0      B1       5        0.0%
   902                           ;!DATA                 0      0      B1       7        0.0%
   903                           ;!CODE                 0      0       0       0        0.0%
   904                           
   905                           	global	_main
   906                           
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 47 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0
   923 ;;      Params:         0       0
   924 ;;      Locals:         0       0
   925 ;;      Temps:          0       0
   926 ;;      Totals:         0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels required when called:    5
   929 ;; This function calls:
   930 ;;		_initUart
   931 ;;		_setUartInterrupt
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           psect	text0,class=CODE,space=0,reloc=2,group=0
   937                           	file	"main.c"
   938                           	line	47
   939                           global __ptext0
   940                           __ptext0:
   941  000970                     psect	text0
   942                           	file	"main.c"
   943                           	line	47
   944                           	global	__size_of_main
   945                           	__size_of_main	equ	__end_of_main-_main
   946  0000                     	
   947                           _main:
   948  000970                     ;incstack = 0
   949                           	opt	stack 26
   950                           	line	48
   951                           	
   952                           l1418:
   953  000970                     ;main.c: 48:     initUart();
   954                           	call	_initUart	;wreg free
   955  000970  EC21  F005         	line	49
   956                           ;main.c: 49:     setUartInterrupt(0x1,0x0);
   957                           	movlw	high(01h)
   958  000974  0E00               	movlb	0	; () banked
   959  000976  0100               	movwf	((setUartInterrupt@status+1))&0ffh
   960  000978  6FE5               	movlw	low(01h)
   961  00097A  0E01               	movwf	((setUartInterrupt@status))&0ffh
   962  00097C  6FE4               	movlw	high(0)
   963  00097E  0E00               	movwf	((setUartInterrupt@priority+1))&0ffh
   964  000980  6FE7               	movlw	low(0)
   965  000982  0E00               	movwf	((setUartInterrupt@priority))&0ffh
   966  000984  6FE6               	call	_setUartInterrupt	;wreg free
   967  000986  ECA0  F004         	line	52
   968                           	
   969                           l1420:
   970  00098A                     ;main.c: 52:     ADCON1bits.PCFG4=1;
   971                           	bsf	((c:4033)),c,4	;volatile
   972  00098A  88C1               	line	53
   973                           	
   974                           l1422:
   975  00098C                     ;main.c: 53:     TRISBbits.RB0=1;
   976                           	bsf	((c:3987)),c,0	;volatile
   977  00098C  8093               	line	56
   978                           	
   979                           l1424:
   980  00098E                     ;main.c: 56:     INTCONbits.INT0IE=1;
   981                           	bsf	((c:4082)),c,4	;volatile
   982  00098E  88F2               	line	59
   983                           	
   984                           l1426:
   985  000990                     ;main.c: 59:     RCONbits.IPEN=0;
   986                           	bcf	((c:4048)),c,7	;volatile
   987  000990  9ED0               	line	60
   988                           	
   989                           l1428:
   990  000992                     ;main.c: 60:     INTCONbits.GIE=1;
   991                           	bsf	((c:4082)),c,7	;volatile
   992  000992  8EF2               	line	61
   993                           	
   994                           l1430:
   995  000994                     ;main.c: 61:     INTCONbits.PEIE=1;
   996                           	bsf	((c:4082)),c,6	;volatile
   997  000994  8CF2               	line	65
   998                           ;main.c: 65:     while(1){
   999                           	
  1000                           l95:
  1001  000996                     	line	67
  1002                           ;main.c: 67:     }
  1003                           	
  1004                           l96:
  1005  000996                     	goto	l95
  1006  000996  EFCB  F004         	
  1007                           l97:
  1008  00099A                     	line	69
  1009                           ;main.c: 68:     return;
  1010                           	
  1011                           l98:
  1012  00099A                     	global	start
  1013                           	goto	start
  1014  00099A  EFF3  F000         	opt stack 0
  1015                           GLOBAL	__end_of_main
  1016                           	__end_of_main:
  1017  00099E                     	signat	_main,89
  1018                           	global	_setUartInterrupt
  1019                           
  1020 ;; *************** function _setUartInterrupt *****************
  1021 ;; Defined at:
  1022 ;;		line 112 in file "main.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  status          2    0[BANK0 ] unsigned int 
  1025 ;;  priority        2    2[BANK0 ] unsigned int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		None
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0
  1037 ;;      Params:         0       4
  1038 ;;      Locals:         0       0
  1039 ;;      Temps:          0       0
  1040 ;;      Totals:         0       4
  1041 ;;Total ram usage:        4 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    4
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1051                           	line	112
  1052                           global __ptext1
  1053                           __ptext1:
  1054  000940                     psect	text1
  1055                           	file	"main.c"
  1056                           	line	112
  1057                           	global	__size_of_setUartInterrupt
  1058                           	__size_of_setUartInterrupt	equ	__end_of_setUartInterrupt-_setUartInterrupt
  1059  0000                     	
  1060                           _setUartInterrupt:
  1061  000940                     ;incstack = 0
  1062                           	opt	stack 26
  1063                           	line	114
  1064                           	
  1065                           l1416:
  1066  000940                     ;main.c: 114:     PIE1bits.TXIE = 0x0;
  1067                           	bcf	((c:3997)),c,4	;volatile
  1068  000940  989D               	line	115
  1069                           ;main.c: 115:     useTxInterrupt = status;
  1070                           	movff	(setUartInterrupt@status),(c:_useTxInterrupt)
  1071  000942  C0E4  F048         	movff	(setUartInterrupt@status+1),(c:_useTxInterrupt+1)
  1072  000946  C0E5  F049         	line	116
  1073                           ;main.c: 116:     PIE1bits.RCIE = status;
  1074                           	movlb	0	; () banked
  1075  00094A  0100               	btfsc	(setUartInterrupt@status)&0ffh,0
  1076  00094C  B1E4               	bra	u795
  1077  00094E  D002               	bcf	((c:3997)),c,5	;volatile
  1078  000950  9A9D               	bra	u796
  1079  000952  D001               	u795:
  1080  000954                     	bsf	((c:3997)),c,5	;volatile
  1081  000954  8A9D               	u796:
  1082  000956                     
  1083                           	line	118
  1084                           ;main.c: 118:     IPR1bits.RCIP = priority;
  1085                           	movlb	0	; () banked
  1086  000956  0100               	btfsc	(setUartInterrupt@priority)&0ffh,0
  1087  000958  B1E6               	bra	u805
  1088  00095A  D002               	bcf	((c:3999)),c,5	;volatile
  1089  00095C  9A9F               	bra	u806
  1090  00095E  D001               	u805:
  1091  000960                     	bsf	((c:3999)),c,5	;volatile
  1092  000960  8A9F               	u806:
  1093  000962                     
  1094                           	line	119
  1095                           ;main.c: 119:     IPR1bits.TXIP = priority;
  1096                           	movlb	0	; () banked
  1097  000962  0100               	btfsc	(setUartInterrupt@priority)&0ffh,0
  1098  000964  B1E6               	bra	u815
  1099  000966  D002               	bcf	((c:3999)),c,4	;volatile
  1100  000968  989F               	bra	u816
  1101  00096A  D001               	u815:
  1102  00096C                     	bsf	((c:3999)),c,4	;volatile
  1103  00096C  889F               	u816:
  1104  00096E                     
  1105                           	line	121
  1106                           ;main.c: 120:     return;
  1107                           	
  1108                           l104:
  1109  00096E                     	return	;funcret
  1110  00096E  0012               	opt stack 0
  1111                           GLOBAL	__end_of_setUartInterrupt
  1112                           	__end_of_setUartInterrupt:
  1113  000970                     	signat	_setUartInterrupt,8313
  1114                           	global	_initUart
  1115                           
  1116 ;; *************** function _initUart *****************
  1117 ;; Defined at:
  1118 ;;		line 74 in file "main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0
  1132 ;;      Params:         0       0
  1133 ;;      Locals:         0       0
  1134 ;;      Temps:          0       0
  1135 ;;      Totals:         0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    4
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1146                           	line	74
  1147                           global __ptext2
  1148                           __ptext2:
  1149  000A42                     psect	text2
  1150                           	file	"main.c"
  1151                           	line	74
  1152                           	global	__size_of_initUart
  1153                           	__size_of_initUart	equ	__end_of_initUart-_initUart
  1154  0000                     	
  1155                           _initUart:
  1156  000A42                     ;incstack = 0
  1157                           	opt	stack 26
  1158                           	line	77
  1159                           	
  1160                           l1400:
  1161  000A42                     ;main.c: 77:     ADCON1bits.PCFG6 =1;
  1162                           	bsf	((c:4033)),c,6	;volatile
  1163  000A42  8CC1               	line	78
  1164                           ;main.c: 78:     ADCON1bits.PCFG5 =1;
  1165                           	bsf	((c:4033)),c,5	;volatile
  1166  000A44  8AC1               	line	85
  1167                           ;main.c: 85:     TRISBbits.RB1 = 1;
  1168                           	bsf	((c:3987)),c,1	;volatile
  1169  000A46  8293               	line	86
  1170                           ;main.c: 86:     TRISBbits.RB4 = 1;
  1171                           	bsf	((c:3987)),c,4	;volatile
  1172  000A48  8893               	line	89
  1173                           ;main.c: 89:     SYNC = 0;
  1174                           	bcf	c:(32100/8),(32100)&7	;volatile
  1175  000A4A  98AC               	line	92
  1176                           ;main.c: 92:     BRGH = 1;
  1177                           	bsf	c:(32098/8),(32098)&7	;volatile
  1178  000A4C  84AC               	line	93
  1179                           ;main.c: 93:     BRG16 = 0;
  1180                           	bcf	c:(32083/8),(32083)&7	;volatile
  1181  000A4E  96AA               	line	95
  1182                           	
  1183                           l1402:
  1184  000A50                     ;main.c: 95:     SPBRG = 129;
  1185                           	movlw	low(081h)
  1186  000A50  0E81               	movwf	((c:4015)),c	;volatile
  1187  000A52  6EAF               	line	97
  1188                           	
  1189                           l1404:
  1190  000A54                     ;main.c: 97:     SPEN = 1;
  1191                           	bsf	c:(32095/8),(32095)&7	;volatile
  1192  000A54  8EAB               	line	99
  1193                           	
  1194                           l1406:
  1195  000A56                     ;main.c: 99:     TX9 = 0;
  1196                           	bcf	c:(32102/8),(32102)&7	;volatile
  1197  000A56  9CAC               	line	100
  1198                           	
  1199                           l1408:
  1200  000A58                     ;main.c: 100:     RX9 = 0;
  1201                           	bcf	c:(32094/8),(32094)&7	;volatile
  1202  000A58  9CAB               	line	102
  1203                           	
  1204                           l1410:
  1205  000A5A                     ;main.c: 102:     TXEN = 1;
  1206                           	bsf	c:(32101/8),(32101)&7	;volatile
  1207  000A5A  8AAC               	line	103
  1208                           	
  1209                           l1412:
  1210  000A5C                     ;main.c: 103:     CREN = 1;
  1211                           	bsf	c:(32092/8),(32092)&7	;volatile
  1212  000A5C  88AB               	goto	l101
  1213  000A5E  EF31  F005         	line	104
  1214                           	
  1215                           l1414:
  1216  000A62                     	line	105
  1217                           ;main.c: 104:     return;
  1218                           	
  1219                           l101:
  1220  000A62                     	return	;funcret
  1221  000A62  0012               	opt stack 0
  1222                           GLOBAL	__end_of_initUart
  1223                           	__end_of_initUart:
  1224  000A64                     	signat	_initUart,89
  1225                           	global	_ISR
  1226                           
  1227 ;; *************** function _ISR *****************
  1228 ;; Defined at:
  1229 ;;		line 127 in file "main.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  str            20   37[COMRAM] unsigned char [20]
  1234 ;;  out             4   57[COMRAM] unsigned long 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0
  1244 ;;      Params:         0       0
  1245 ;;      Locals:        24       0
  1246 ;;      Temps:          8       0
  1247 ;;      Totals:        32       0
  1248 ;;Total ram usage:       32 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    3
  1251 ;; This function calls:
  1252 ;;		___lmul
  1253 ;;		_handleRX
  1254 ;;		_handleTX
  1255 ;;		_ltoa
  1256 ;;		_memset
  1257 ;;		_startTX
  1258 ;;		_stopTimer0
  1259 ;;		_strcat
  1260 ;;		_strcpy
  1261 ;;		_strlen
  1262 ;; This function is called by:
  1263 ;;		Interrupt level 2
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           psect	intcode,class=CODE,space=0,reloc=2
  1267                           global __pintcode
  1268                           __pintcode:
  1269  000008                     psect	intcode
  1270                           	file	"main.c"
  1271                           	line	127
  1272                           	global	__size_of_ISR
  1273                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  1274  0000                     	
  1275                           _ISR:
  1276  000008                     ;incstack = 0
  1277                           	opt	stack 26
  1278                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  1279  000008  824A               	movff	fsr1l+0,??_ISR+0
  1280  00000A  CFE1 F01E          	movff	fsr1h+0,??_ISR+1
  1281  00000E  CFE2 F01F          	movff	fsr2l+0,??_ISR+2
  1282  000012  CFD9 F020          	movff	fsr2h+0,??_ISR+3
  1283  000016  CFDA F021          	movff	tblptrl+0,??_ISR+4
  1284  00001A  CFF6 F022          	movff	tblptrh+0,??_ISR+5
  1285  00001E  CFF7 F023          	movff	tblptru+0,??_ISR+6
  1286  000022  CFF8 F024          	movff	tablat+0,??_ISR+7
  1287  000026  CFF5 F025          	line	128
  1288                           	
  1289                           i2l1350:
  1290  00002A                     ;main.c: 128:     if (PIR1bits.RCIF){
  1291                           	btfss	((c:3998)),c,5	;volatile
  1292  00002A  AA9E               	goto	i2u71_41
  1293  00002C  EF1A  F000         	goto	i2u71_40
  1294  000030  EF1C  F000         i2u71_41:
  1295  000034                     	goto	i2l1354
  1296  000034  EF20  F000         i2u71_40:
  1297  000038                     	line	129
  1298                           	
  1299                           i2l1352:
  1300  000038                     ;main.c: 129:         handleRX();
  1301                           	call	_handleRX	;wreg free
  1302  000038  ECDA  F001         	goto	i2l1354
  1303  00003C  EF20  F000         	line	130
  1304                           ;main.c: 130:     }
  1305                           	
  1306                           i2l109:
  1307  000040                     	line	132
  1308                           	
  1309                           i2l1354:
  1310  000040                     ;main.c: 132:     if(PIE1bits.TXIE && PIR1bits.TXIF){
  1311                           	btfss	((c:3997)),c,4	;volatile
  1312  000040  A89D               	goto	i2u72_41
  1313  000042  EF25  F000         	goto	i2u72_40
  1314  000046  EF27  F000         i2u72_41:
  1315  00004A                     	goto	i2l1360
  1316  00004A  EF32  F000         i2u72_40:
  1317  00004E                     	
  1318                           i2l1356:
  1319  00004E                     	btfss	((c:3998)),c,4	;volatile
  1320  00004E  A89E               	goto	i2u73_41
  1321  000050  EF2C  F000         	goto	i2u73_40
  1322  000054  EF2E  F000         i2u73_41:
  1323  000058                     	goto	i2l1360
  1324  000058  EF32  F000         i2u73_40:
  1325  00005C                     	line	133
  1326                           	
  1327                           i2l1358:
  1328  00005C                     ;main.c: 133:         handleTX();
  1329                           	call	_handleTX	;wreg free
  1330  00005C  ECA8  F003         	goto	i2l1360
  1331  000060  EF32  F000         	line	134
  1332                           ;main.c: 134:     }
  1333                           	
  1334                           i2l110:
  1335  000064                     	line	136
  1336                           	
  1337                           i2l1360:
  1338  000064                     ;main.c: 136:     if(INTCONbits.INT0IE && INTCONbits.INT0IF){
  1339                           	btfss	((c:4082)),c,4	;volatile
  1340  000064  A8F2               	goto	i2u74_41
  1341  000066  EF37  F000         	goto	i2u74_40
  1342  00006A  EF39  F000         i2u74_41:
  1343  00006E                     	goto	i2l1388
  1344  00006E  EFB2  F000         i2u74_40:
  1345  000072                     	
  1346                           i2l1362:
  1347  000072                     	btfss	((c:4082)),c,1	;volatile
  1348  000072  A2F2               	goto	i2u75_41
  1349  000074  EF3E  F000         	goto	i2u75_40
  1350  000078  EF40  F000         i2u75_41:
  1351  00007C                     	goto	i2l1388
  1352  00007C  EFB2  F000         i2u75_40:
  1353  000080                     	line	137
  1354                           	
  1355                           i2l1364:
  1356  000080                     ;main.c: 137:         INTCONbits.INT0IF=0;
  1357                           	bcf	((c:4082)),c,1	;volatile
  1358  000080  92F2               	line	138
  1359                           	
  1360                           i2l1366:
  1361  000082                     ;main.c: 138:         stopTimer0();
  1362                           	call	_stopTimer0	;wreg free
  1363  000082  EC3C  F005         	line	139
  1364                           	
  1365                           i2l1368:
  1366  000086                     ;main.c: 139:         PORTAbits.RA0=0;
  1367                           	bcf	((c:3968)),c,0	;volatile
  1368  000086  9080               	line	141
  1369                           	
  1370                           i2l1370:
  1371  000088                     ;main.c: 141:         unsigned long out=timer * 52;
  1372                           	movff	(c:_timer),(c:___lmul@multiplier)
  1373  000088  C03E  F001         	movff	(c:_timer+1),(c:___lmul@multiplier+1)
  1374  00008C  C03F  F002         	movff	(c:_timer+2),(c:___lmul@multiplier+2)
  1375  000090  C040  F003         	movff	(c:_timer+3),(c:___lmul@multiplier+3)
  1376  000094  C041  F004         	movlw	low(034h)
  1377  000098  0E34               	movwf	((c:___lmul@multiplicand)),c
  1378  00009A  6E05               	movlw	high(034h)
  1379  00009C  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  1380  00009E  6E06               	movlw	low highword(034h)
  1381  0000A0  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  1382  0000A2  6E07               	movlw	high highword(034h)
  1383  0000A4  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  1384  0000A6  6E08               	call	___lmul	;wreg free
  1385  0000A8  ECE2  F003         	movff	0+?___lmul,(c:ISR@out)
  1386  0000AC  C001  F03A         	movff	1+?___lmul,(c:ISR@out+1)
  1387  0000B0  C002  F03B         	movff	2+?___lmul,(c:ISR@out+2)
  1388  0000B4  C003  F03C         	movff	3+?___lmul,(c:ISR@out+3)
  1389  0000B8  C004  F03D         	
  1390                           	line	143
  1391                           	
  1392                           i2l1372:
  1393  0000BC                     ;main.c: 142:         char str[20];;main.c: 143:         memset(str,'0',20);
  1394                           		movlw	low(ISR@str)
  1395  0000BC  0E26               	movwf	((c:memset@dest)),c
  1396  0000BE  6E01               	movlw	high(ISR@str)
  1397  0000C0  0E00               	movwf	((c:memset@dest+1)),c
  1398  0000C2  6E02               
  1399                           	movlw	high(030h)
  1400  0000C4  0E00               	movwf	((c:memset@c+1)),c
  1401  0000C6  6E04               	movlw	low(030h)
  1402  0000C8  0E30               	movwf	((c:memset@c)),c
  1403  0000CA  6E03               	movlw	high(014h)
  1404  0000CC  0E00               	movwf	((c:memset@n+1)),c
  1405  0000CE  6E06               	movlw	low(014h)
  1406  0000D0  0E14               	movwf	((c:memset@n)),c
  1407  0000D2  6E05               	call	_memset	;wreg free
  1408  0000D4  ECFB  F000         	line	145
  1409                           	
  1410                           i2l1374:
  1411  0000D8                     ;main.c: 145:         ltoa(str,20,out);
  1412                           		movlw	low(ISR@str)
  1413  0000D8  0E26               	movwf	((c:ltoa@buffer)),c
  1414  0000DA  6E0E               	movlw	high(ISR@str)
  1415  0000DC  0E00               	movwf	((c:ltoa@buffer+1)),c
  1416  0000DE  6E0F               
  1417                           	movlw	high(014h)
  1418  0000E0  0E00               	movwf	((c:ltoa@buffSize+1)),c
  1419  0000E2  6E11               	movlw	low(014h)
  1420  0000E4  0E14               	movwf	((c:ltoa@buffSize)),c
  1421  0000E6  6E10               	movff	(c:ISR@out),(c:ltoa@value)
  1422  0000E8  C03A  F012         	movff	(c:ISR@out+1),(c:ltoa@value+1)
  1423  0000EC  C03B  F013         	movff	(c:ISR@out+2),(c:ltoa@value+2)
  1424  0000F0  C03C  F014         	movff	(c:ISR@out+3),(c:ltoa@value+3)
  1425  0000F4  C03D  F015         	call	_ltoa	;wreg free
  1426  0000F8  EC85  F002         	line	147
  1427                           	
  1428                           i2l1376:
  1429  0000FC                     ;main.c: 147:         strcpy(bufferTx, "FINE: ");
  1430                           		movlw	low(_bufferTx)
  1431  0000FC  0EB2               	movwf	((c:strcpy@dest)),c
  1432  0000FE  6E07               	movlw	high(_bufferTx)
  1433  000100  0E00               	movwf	((c:strcpy@dest+1)),c
  1434  000102  6E08               
  1435                           		movlw	low(STR_1)
  1436  000104  0EEB               	movwf	((c:strcpy@src)),c
  1437  000106  6E09               	movlw	high(STR_1)
  1438  000108  0E01               	movwf	((c:strcpy@src+1)),c
  1439  00010A  6E0A               
  1440                           	call	_strcpy	;wreg free
  1441  00010C  EC1B  F004         	line	148
  1442                           	
  1443                           i2l1378:
  1444  000110                     ;main.c: 148:         strcat(bufferTx, str);
  1445                           		movlw	low(_bufferTx)
  1446  000110  0EB2               	movwf	((c:strcat@dest)),c
  1447  000112  6E11               	movlw	high(_bufferTx)
  1448  000114  0E00               	movwf	((c:strcat@dest+1)),c
  1449  000116  6E12               
  1450                           		movlw	low(ISR@str)
  1451  000118  0E26               	movwf	((c:strcat@src)),c
  1452  00011A  6E13               	movlw	high(ISR@str)
  1453  00011C  0E00               	movwf	((c:strcat@src+1)),c
  1454  00011E  6E14               
  1455                           	call	_strcat	;wreg free
  1456  000120  ECE6  F004         	line	149
  1457                           	
  1458                           i2l1380:
  1459  000124                     ;main.c: 149:         strcat(bufferTx, "\r\n");
  1460                           		movlw	low(_bufferTx)
  1461  000124  0EB2               	movwf	((c:strcat@dest)),c
  1462  000126  6E11               	movlw	high(_bufferTx)
  1463  000128  0E00               	movwf	((c:strcat@dest+1)),c
  1464  00012A  6E12               
  1465                           		movlw	low(STR_2)
  1466  00012C  0EF2               	movwf	((c:strcat@src)),c
  1467  00012E  6E13               	movlw	high(STR_2)
  1468  000130  0E01               	movwf	((c:strcat@src+1)),c
  1469  000132  6E14               
  1470                           	call	_strcat	;wreg free
  1471  000134  ECE6  F004         	line	152
  1472                           	
  1473                           i2l1382:
  1474  000138                     ;main.c: 152:         bufferTxSize = strlen(bufferTx);
  1475                           		movlw	low(_bufferTx)
  1476  000138  0EB2               	movwf	((c:strlen@s)),c
  1477  00013A  6E01               	movlw	high(_bufferTx)
  1478  00013C  0E00               	movwf	((c:strlen@s+1)),c
  1479  00013E  6E02               
  1480                           	call	_strlen	;wreg free
  1481  000140  EC4F  F004         	movff	0+?_strlen,(c:_bufferTxSize)
  1482  000144  C001  F046         	movff	1+?_strlen,(c:_bufferTxSize+1)
  1483  000148  C002  F047         	line	153
  1484                           	
  1485                           i2l1384:
  1486  00014C                     ;main.c: 153:         timer=0;
  1487                           	movlw	low(0)
  1488  00014C  0E00               	movwf	((c:_timer)),c
  1489  00014E  6E3E               	movlw	high(0)
  1490  000150  0E00               	movwf	((c:_timer+1)),c
  1491  000152  6E3F               	movlw	low highword(0)
  1492  000154  0E00               	movwf	((c:_timer+2)),c
  1493  000156  6E40               	movlw	high highword(0)
  1494  000158  0E00               	movwf	((c:_timer+3)),c
  1495  00015A  6E41               	line	154
  1496                           	
  1497                           i2l1386:
  1498  00015C                     ;main.c: 154:         startTX();
  1499                           	call	_startTX	;wreg free
  1500  00015C  EC78  F004         	goto	i2l1388
  1501  000160  EFB2  F000         	line	156
  1502                           ;main.c: 156:     }
  1503                           	
  1504                           i2l111:
  1505  000164                     	line	157
  1506                           	
  1507                           i2l1388:
  1508  000164                     ;main.c: 157:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  1509                           	btfss	((c:4082)),c,5	;volatile
  1510  000164  AAF2               	goto	i2u76_41
  1511  000166  EFB7  F000         	goto	i2u76_40
  1512  00016A  EFB9  F000         i2u76_41:
  1513  00016E                     	goto	i2l114
  1514  00016E  EFE1  F000         i2u76_40:
  1515  000172                     	
  1516                           i2l1390:
  1517  000172                     	btfss	((c:4082)),c,2	;volatile
  1518  000172  A4F2               	goto	i2u77_41
  1519  000174  EFBE  F000         	goto	i2u77_40
  1520  000178  EFC0  F000         i2u77_41:
  1521  00017C                     	goto	i2l114
  1522  00017C  EFE1  F000         i2u77_40:
  1523  000180                     	line	158
  1524                           	
  1525                           i2l1392:
  1526  000180                     ;main.c: 158:         INTCONbits.TMR0IF=0;
  1527                           	bcf	((c:4082)),c,2	;volatile
  1528  000180  94F2               	line	159
  1529                           	
  1530                           i2l1394:
  1531  000182                     ;main.c: 159:         if(timer == 0xFFFFFFFF)
  1532                           		incf	((c:_timer)),c,w
  1533  000182  283E               	bnz	i2u78_41
  1534  000184  E10A               	incf	((c:_timer+1)),c,w
  1535  000186  283F               	bnz	i2u78_41
  1536  000188  E108               	incf	((c:_timer+2)),c,w
  1537  00018A  2840               	bnz	i2u78_41
  1538  00018C  E106               	incf	((c:_timer+3)),c,w
  1539  00018E  2841               	btfss	status,2
  1540  000190  A4D8               	goto	i2u78_41
  1541  000192  EFCD  F000         	goto	i2u78_40
  1542  000196  EFCF  F000         
  1543                           i2u78_41:
  1544  00019A                     	goto	i2l1398
  1545  00019A  EFD9  F000         i2u78_40:
  1546  00019E                     	line	161
  1547                           	
  1548                           i2l1396:
  1549  00019E                     ;main.c: 160:         {;main.c: 161:             timer=0;
  1550                           	movlw	low(0)
  1551  00019E  0E00               	movwf	((c:_timer)),c
  1552  0001A0  6E3E               	movlw	high(0)
  1553  0001A2  0E00               	movwf	((c:_timer+1)),c
  1554  0001A4  6E3F               	movlw	low highword(0)
  1555  0001A6  0E00               	movwf	((c:_timer+2)),c
  1556  0001A8  6E40               	movlw	high highword(0)
  1557  0001AA  0E00               	movwf	((c:_timer+3)),c
  1558  0001AC  6E41               	goto	i2l1398
  1559  0001AE  EFD9  F000         	line	162
  1560                           ;main.c: 162:         }
  1561                           	
  1562                           i2l113:
  1563  0001B2                     	line	163
  1564                           	
  1565                           i2l1398:
  1566  0001B2                     ;main.c: 163:         timer++;
  1567                           	movlw	low(01h)
  1568  0001B2  0E01               	addwf	((c:_timer)),c
  1569  0001B4  263E               	movlw	0
  1570  0001B6  0E00               	addwfc	((c:_timer+1)),c
  1571  0001B8  223F               	addwfc	((c:_timer+2)),c
  1572  0001BA  2240               	addwfc	((c:_timer+3)),c
  1573  0001BC  2241               	goto	i2l114
  1574  0001BE  EFE1  F000         	line	164
  1575                           ;main.c: 164:     }
  1576                           	
  1577                           i2l112:
  1578  0001C2                     	line	166
  1579                           	
  1580                           i2l114:
  1581  0001C2                     	movff	??_ISR+7,tablat+0
  1582  0001C2  C025  FFF5         	movff	??_ISR+6,tblptru+0
  1583  0001C6  C024  FFF8         	movff	??_ISR+5,tblptrh+0
  1584  0001CA  C023  FFF7         	movff	??_ISR+4,tblptrl+0
  1585  0001CE  C022  FFF6         	movff	??_ISR+3,fsr2h+0
  1586  0001D2  C021  FFDA         	movff	??_ISR+2,fsr2l+0
  1587  0001D6  C020  FFD9         	movff	??_ISR+1,fsr1h+0
  1588  0001DA  C01F  FFE2         	movff	??_ISR+0,fsr1l+0
  1589  0001DE  C01E  FFE1         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1590  0001E2  924A               	retfie f
  1591  0001E4  0011               	opt stack 0
  1592                           GLOBAL	__end_of_ISR
  1593                           	__end_of_ISR:
  1594  0001E6                     	signat	_ISR,89
  1595                           	global	_strcat
  1596                           
  1597 ;; *************** function _strcat *****************
  1598 ;; Defined at:
  1599 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  dest            2   16[COMRAM] PTR unsigned char 
  1602 ;;		 -> bufferTx(50), 
  1603 ;;  src             2   18[COMRAM] PTR const unsigned char 
  1604 ;;		 -> STR_2(3), ISR@str(20), 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  2   16[COMRAM] PTR unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0
  1616 ;;      Params:         4       0
  1617 ;;      Locals:         0       0
  1618 ;;      Temps:          0       0
  1619 ;;      Totals:         4       0
  1620 ;;Total ram usage:        4 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    1
  1623 ;; This function calls:
  1624 ;;		_strcpy
  1625 ;;		_strlen
  1626 ;; This function is called by:
  1627 ;;		_ISR
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           psect	text4,class=CODE,space=0,reloc=2,group=2
  1631                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  1632                           	line	3
  1633                           global __ptext4
  1634                           __ptext4:
  1635  0009CC                     psect	text4
  1636                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcat.c"
  1637                           	line	3
  1638                           	global	__size_of_strcat
  1639                           	__size_of_strcat	equ	__end_of_strcat-_strcat
  1640  0000                     	
  1641                           _strcat:
  1642  0009CC                     ;incstack = 0
  1643                           	opt	stack 27
  1644                           	line	5
  1645                           	
  1646                           i2l1322:
  1647  0009CC                     		movff	(c:strcat@dest),(c:strlen@s)
  1648  0009CC  C011  F001         	movff	(c:strcat@dest+1),(c:strlen@s+1)
  1649  0009D0  C012  F002         
  1650                           	call	_strlen	;wreg free
  1651  0009D4  EC4F  F004         	movf	(0+?_strlen),c,w
  1652  0009D8  5001               	addwf	((c:strcat@dest)),c,w
  1653  0009DA  2411               	movwf	((c:strcpy@dest)),c
  1654  0009DC  6E07               	movf	(1+?_strlen),c,w
  1655  0009DE  5002               	addwfc	((c:strcat@dest+1)),c,w
  1656  0009E0  2012               	movwf	1+((c:strcpy@dest)),c
  1657  0009E2  6E08               		movff	(c:strcat@src),(c:strcpy@src)
  1658  0009E4  C013  F009         	movff	(c:strcat@src+1),(c:strcpy@src+1)
  1659  0009E8  C014  F00A         
  1660                           	call	_strcpy	;wreg free
  1661  0009EC  EC1B  F004         	goto	i2l846
  1662  0009F0  EFFA  F004         	line	6
  1663                           	
  1664                           i2l1324:
  1665  0009F4                     	line	7
  1666                           ;	Return value of _strcat is never used
  1667                           	
  1668                           i2l846:
  1669  0009F4                     	return	;funcret
  1670  0009F4  0012               	opt stack 0
  1671                           GLOBAL	__end_of_strcat
  1672                           	__end_of_strcat:
  1673  0009F6                     	signat	_strcat,8314
  1674                           	global	_strlen
  1675                           
  1676 ;; *************** function _strlen *****************
  1677 ;; Defined at:
  1678 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1681 ;;		 -> bufferTx(50), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  a               2    4[COMRAM] PTR const unsigned char 
  1684 ;;		 -> bufferTx(50), 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  2    0[COMRAM] unsigned int 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0
  1694 ;;      Params:         2       0
  1695 ;;      Locals:         2       0
  1696 ;;      Temps:          2       0
  1697 ;;      Totals:         6       0
  1698 ;;Total ram usage:        6 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_ISR
  1704 ;;		_strcat
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           psect	text5,class=CODE,space=0,reloc=2,group=2
  1708                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  1709                           	line	12
  1710                           global __ptext5
  1711                           __ptext5:
  1712  00089E                     psect	text5
  1713                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  1714                           	line	12
  1715                           	global	__size_of_strlen
  1716                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  1717  0000                     	
  1718                           _strlen:
  1719  00089E                     ;incstack = 0
  1720                           	opt	stack 28
  1721                           	line	14
  1722                           	
  1723                           i2l1174:
  1724  00089E                     		movff	(c:strlen@s),(c:strlen@a)
  1725  00089E  C001  F005         	movff	(c:strlen@s+1),(c:strlen@a+1)
  1726  0008A2  C002  F006         
  1727                           	line	16
  1728                           	goto	i2l1178
  1729  0008A6  EF59  F004         	
  1730                           i2l856:
  1731  0008AA                     	line	17
  1732                           	
  1733                           i2l1176:
  1734  0008AA                     	infsnz	((c:strlen@s)),c
  1735  0008AA  4A01               	incf	((c:strlen@s+1)),c
  1736  0008AC  2A02               	goto	i2l1178
  1737  0008AE  EF59  F004         	line	18
  1738                           	
  1739                           i2l855:
  1740  0008B2                     	line	16
  1741                           	
  1742                           i2l1178:
  1743  0008B2                     	movff	(c:strlen@s),fsr2l
  1744  0008B2  C001  FFD9         	movff	(c:strlen@s+1),fsr2h
  1745  0008B6  C002  FFDA         	movf	indf2,w
  1746  0008BA  50DF               	btfss	status,2
  1747  0008BC  A4D8               	goto	i2u47_41
  1748  0008BE  EF63  F004         	goto	i2u47_40
  1749  0008C2  EF65  F004         i2u47_41:
  1750  0008C6                     	goto	i2l1176
  1751  0008C6  EF55  F004         i2u47_40:
  1752  0008CA                     	goto	i2l1180
  1753  0008CA  EF67  F004         	
  1754                           i2l857:
  1755  0008CE                     	line	25
  1756                           	
  1757                           i2l1180:
  1758  0008CE                     	movff	(c:strlen@a),??_strlen+0+0
  1759  0008CE  C005  F003         	movff	(c:strlen@a+1),??_strlen+0+0+1
  1760  0008D2  C006  F004         	comf	(??_strlen+0+0),c
  1761  0008D6  1E03               	comf	(??_strlen+0+1),c
  1762  0008D8  1E04               	infsnz	(??_strlen+0+0),c
  1763  0008DA  4A03               	incf	(??_strlen+0+1),c
  1764  0008DC  2A04               	movf	((c:strlen@s)),c,w
  1765  0008DE  5001               	addwf	(??_strlen+0+0),c,w
  1766  0008E0  2403               	movwf	((c:?_strlen)),c
  1767  0008E2  6E01               	movf	((c:strlen@s+1)),c,w
  1768  0008E4  5002               	addwfc	(??_strlen+0+1),c,w
  1769  0008E6  2004               	movwf	1+((c:?_strlen)),c
  1770  0008E8  6E02               	goto	i2l858
  1771  0008EA  EF77  F004         	
  1772                           i2l1182:
  1773  0008EE                     	line	26
  1774                           	
  1775                           i2l858:
  1776  0008EE                     	return	;funcret
  1777  0008EE  0012               	opt stack 0
  1778                           GLOBAL	__end_of_strlen
  1779                           	__end_of_strlen:
  1780  0008F0                     	signat	_strlen,4218
  1781                           	global	_strcpy
  1782                           
  1783 ;; *************** function _strcpy *****************
  1784 ;; Defined at:
  1785 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  dest            2    6[COMRAM] PTR unsigned char 
  1788 ;;		 -> bufferTx(50), 
  1789 ;;  src             2    8[COMRAM] PTR const unsigned char 
  1790 ;;		 -> STR_2(3), STR_1(7), ISR@str(20), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  d               2   14[COMRAM] PTR unsigned char 
  1793 ;;		 -> bufferTx(50), 
  1794 ;;  s               2   12[COMRAM] PTR const unsigned char 
  1795 ;;		 -> STR_2(3), STR_1(7), ISR@str(20), 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  2    6[COMRAM] PTR unsigned char 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0
  1805 ;;      Params:         4       0
  1806 ;;      Locals:         4       0
  1807 ;;      Temps:          2       0
  1808 ;;      Totals:        10       0
  1809 ;;Total ram usage:       10 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_ISR
  1815 ;;		_strcat
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           psect	text6,class=CODE,space=0,reloc=2,group=2
  1819                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  1820                           	line	7
  1821                           global __ptext6
  1822                           __ptext6:
  1823  000836                     psect	text6
  1824                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strcpy.c"
  1825                           	line	7
  1826                           	global	__size_of_strcpy
  1827                           	__size_of_strcpy	equ	__end_of_strcpy-_strcpy
  1828  0000                     	
  1829                           _strcpy:
  1830  000836                     ;incstack = 0
  1831                           	opt	stack 28
  1832                           	line	13
  1833                           	
  1834                           i2l1170:
  1835  000836                     		movff	(c:strcpy@src),(c:strcpy@s)
  1836  000836  C009  F00D         	movff	(c:strcpy@src+1),(c:strcpy@s+1)
  1837  00083A  C00A  F00E         
  1838                           	line	14
  1839                           		movff	(c:strcpy@dest),(c:strcpy@d)
  1840  00083E  C007  F00F         	movff	(c:strcpy@dest+1),(c:strcpy@d+1)
  1841  000842  C008  F010         
  1842                           	line	15
  1843                           	goto	i2l1172
  1844  000846  EF27  F004         	
  1845                           i2l850:
  1846  00084A                     	goto	i2l1172
  1847  00084A  EF27  F004         	
  1848                           i2l849:
  1849  00084E                     	
  1850                           i2l1172:
  1851  00084E                     	movf	((c:strcpy@s)),c,w
  1852  00084E  500D               	movwf	(??_strcpy+0+0)&0ffh,c
  1853  000850  6E0B               	movf	((c:strcpy@s+1)),c,w
  1854  000852  500E               	movwf	1+(??_strcpy+0+0)&0ffh,c
  1855  000854  6E0C               	infsnz	((c:strcpy@s)),c
  1856  000856  4A0D               	incf	((c:strcpy@s+1)),c
  1857  000858  2A0E               	movff	??_strcpy+0+0,tblptrl
  1858  00085A  C00B  FFF6         	movff	??_strcpy+0+1,tblptrh
  1859  00085E  C00C  FFF7         	clrf	tblptru
  1860  000862  6AF8               	
  1861                           	movff	(c:strcpy@d),fsr2l
  1862  000864  C00F  FFD9         	movff	(c:strcpy@d+1),fsr2h
  1863  000868  C010  FFDA         	infsnz	((c:strcpy@d)),c
  1864  00086C  4A0F               	incf	((c:strcpy@d+1)),c
  1865  00086E  2A10               	movlw	high __ramtop-1
  1866  000870  0E00               	cpfsgt	tblptrh
  1867  000872  64F7               	bra	i2u45_47
  1868  000874  D003               	tblrd	*
  1869  000876  0008               	
  1870                           	movf	tablat,w
  1871  000878  50F5               	bra	i2u45_40
  1872  00087A  D005               i2u45_47:
  1873  00087C                     	movff	tblptrl,fsr1l
  1874  00087C  CFF6 FFE1          	movff	tblptrh,fsr1h
  1875  000880  CFF7 FFE2          	movf	indf1,w
  1876  000884  50E7               i2u45_40:
  1877  000886                     	movwf	indf2
  1878  000886  6EDF               	movf	indf2,w
  1879  000888  50DF               	btfss	status,2
  1880  00088A  A4D8               	goto	i2u46_41
  1881  00088C  EF4A  F004         	goto	i2u46_40
  1882  000890  EF4C  F004         i2u46_41:
  1883  000894                     	goto	i2l1172
  1884  000894  EF27  F004         i2u46_40:
  1885  000898                     	goto	i2l852
  1886  000898  EF4E  F004         	
  1887                           i2l851:
  1888  00089C                     	line	18
  1889                           ;	Return value of _strcpy is never used
  1890                           	
  1891                           i2l852:
  1892  00089C                     	return	;funcret
  1893  00089C  0012               	opt stack 0
  1894                           GLOBAL	__end_of_strcpy
  1895                           	__end_of_strcpy:
  1896  00089E                     	signat	_strcpy,8314
  1897                           	global	_stopTimer0
  1898                           
  1899 ;; *************** function _stopTimer0 *****************
  1900 ;; Defined at:
  1901 ;;		line 244 in file "main.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		None
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0
  1915 ;;      Params:         0       0
  1916 ;;      Locals:         0       0
  1917 ;;      Temps:          0       0
  1918 ;;      Totals:         0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_ISR
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           psect	text7,class=CODE,space=0,reloc=2,group=0
  1928                           	file	"main.c"
  1929                           	line	244
  1930                           global __ptext7
  1931                           __ptext7:
  1932  000A78                     psect	text7
  1933                           	file	"main.c"
  1934                           	line	244
  1935                           	global	__size_of_stopTimer0
  1936                           	__size_of_stopTimer0	equ	__end_of_stopTimer0-_stopTimer0
  1937  0000                     	
  1938                           _stopTimer0:
  1939  000A78                     ;incstack = 0
  1940                           	opt	stack 28
  1941                           	line	245
  1942                           	
  1943                           i2l1302:
  1944  000A78                     ;main.c: 245:     T0CONbits.TMR0ON=0;
  1945                           	bcf	((c:4053)),c,7	;volatile
  1946  000A78  9ED5               	line	246
  1947                           ;main.c: 246:     INTCONbits.TMR0IE=0;
  1948                           	bcf	((c:4082)),c,5	;volatile
  1949  000A7A  9AF2               	line	247
  1950                           ;main.c: 247:     INTCONbits.TMR0IF=0;
  1951                           	bcf	((c:4082)),c,2	;volatile
  1952  000A7C  94F2               	line	248
  1953                           	
  1954                           i2l149:
  1955  000A7E                     	return	;funcret
  1956  000A7E  0012               	opt stack 0
  1957                           GLOBAL	__end_of_stopTimer0
  1958                           	__end_of_stopTimer0:
  1959  000A80                     	signat	_stopTimer0,89
  1960                           	global	_ltoa
  1961                           
  1962 ;; *************** function _ltoa *****************
  1963 ;; Defined at:
  1964 ;;		line 251 in file "main.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  buffer          2   13[COMRAM] PTR unsigned char 
  1967 ;;		 -> ISR@str(20), 
  1968 ;;  buffSize        2   15[COMRAM] int 
  1969 ;;  value           4   17[COMRAM] unsigned long 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  original        4   21[COMRAM] long 
  1972 ;;  c               2   27[COMRAM] int 
  1973 ;;  pos             2   25[COMRAM] int 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0
  1983 ;;      Params:         8       0
  1984 ;;      Locals:         8       0
  1985 ;;      Temps:          0       0
  1986 ;;      Totals:        16       0
  1987 ;;Total ram usage:       16 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    1
  1990 ;; This function calls:
  1991 ;;		___lldiv
  1992 ;;		___llmod
  1993 ;; This function is called by:
  1994 ;;		_ISR
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           psect	text8,class=CODE,space=0,reloc=2,group=0
  1998                           	line	251
  1999                           global __ptext8
  2000                           __ptext8:
  2001  00050A                     psect	text8
  2002                           	file	"main.c"
  2003                           	line	251
  2004                           	global	__size_of_ltoa
  2005                           	__size_of_ltoa	equ	__end_of_ltoa-_ltoa
  2006  0000                     	
  2007                           _ltoa:
  2008  00050A                     ;incstack = 0
  2009                           	opt	stack 27
  2010                           	line	253
  2011                           	
  2012                           i2l1304:
  2013  00050A                     ;main.c: 251: void ltoa(char *buffer,int buffSize, unsigned long value);main.c: 252:  {;
                                 main.c: 253:      long original = value;
  2014                           	movff	(c:ltoa@value),(c:ltoa@original)
  2015  00050A  C012  F016         	movff	(c:ltoa@value+1),(c:ltoa@original+1)
  2016  00050E  C013  F017         	movff	(c:ltoa@value+2),(c:ltoa@original+2)
  2017  000512  C014  F018         	movff	(c:ltoa@value+3),(c:ltoa@original+3)
  2018  000516  C015  F019         	line	255
  2019                           ;main.c: 255:      int c = buffSize;
  2020                           	movff	(c:ltoa@buffSize),(c:ltoa@c)
  2021  00051A  C010  F01C         	movff	(c:ltoa@buffSize+1),(c:ltoa@c+1)
  2022  00051E  C011  F01D         	line	257
  2023                           	
  2024                           i2l1306:
  2025  000522                     ;main.c: 257:      buffer[c] = 0;
  2026                           	movf	((c:ltoa@c)),c,w
  2027  000522  501C               	addwf	((c:ltoa@buffer)),c,w
  2028  000524  240E               	movwf	c:fsr2l
  2029  000526  6ED9               	movf	((c:ltoa@c+1)),c,w
  2030  000528  501D               	addwfc	((c:ltoa@buffer+1)),c,w
  2031  00052A  200F               	movwf	1+c:fsr2l
  2032  00052C  6EDA               	movlw	low(0)
  2033  00052E  0E00               	movwf	indf2
  2034  000530  6EDF               	line	259
  2035                           	
  2036                           i2l1308:
  2037  000532                     ;main.c: 259:      int pos=0;
  2038                           	movlw	high(0)
  2039  000532  0E00               	movwf	((c:ltoa@pos+1)),c
  2040  000534  6E1B               	movlw	low(0)
  2041  000536  0E00               	movwf	((c:ltoa@pos)),c
  2042  000538  6E1A               	goto	i2l1310
  2043  00053A  EF9F  F002         	line	260
  2044                           ;main.c: 260:      do
  2045                           	
  2046                           i2l152:
  2047  00053E                     	line	262
  2048                           	
  2049                           i2l1310:
  2050  00053E                     ;main.c: 261:      {;main.c: 262:          pos++;
  2051                           	infsnz	((c:ltoa@pos)),c
  2052  00053E  4A1A               	incf	((c:ltoa@pos+1)),c
  2053  000540  2A1B               	line	263
  2054                           	
  2055                           i2l1312:
  2056  000542                     ;main.c: 263:          buffer[--c] = (value % 10) + '0';
  2057                           	decf	((c:ltoa@c)),c
  2058  000542  061C               	btfss	status,0
  2059  000544  A0D8               	decf	((c:ltoa@c+1)),c
  2060  000546  061D               	movf	((c:ltoa@c)),c,w
  2061  000548  501C               	addwf	((c:ltoa@buffer)),c,w
  2062  00054A  240E               	movwf	c:fsr2l
  2063  00054C  6ED9               	movf	((c:ltoa@c+1)),c,w
  2064  00054E  501D               	addwfc	((c:ltoa@buffer+1)),c,w
  2065  000550  200F               	movwf	1+c:fsr2l
  2066  000552  6EDA               	movff	(c:ltoa@value),(c:___llmod@dividend)
  2067  000554  C012  F001         	movff	(c:ltoa@value+1),(c:___llmod@dividend+1)
  2068  000558  C013  F002         	movff	(c:ltoa@value+2),(c:___llmod@dividend+2)
  2069  00055C  C014  F003         	movff	(c:ltoa@value+3),(c:___llmod@dividend+3)
  2070  000560  C015  F004         	movlw	low(0Ah)
  2071  000564  0E0A               	movwf	((c:___llmod@divisor)),c
  2072  000566  6E05               	movlw	high(0Ah)
  2073  000568  0E00               	movwf	((c:___llmod@divisor+1)),c
  2074  00056A  6E06               	movlw	low highword(0Ah)
  2075  00056C  0E00               	movwf	((c:___llmod@divisor+2)),c
  2076  00056E  6E07               	movlw	high highword(0Ah)
  2077  000570  0E00               	movwf	((c:___llmod@divisor+3)),c
  2078  000572  6E08               	call	___llmod	;wreg free
  2079  000574  EC5A  F003         	movf	(0+?___llmod),c,w
  2080  000578  5001               	addlw	low(030h)
  2081  00057A  0F30               	movwf	indf2,c
  2082  00057C  6EDF               
  2083                           	line	264
  2084                           	
  2085                           i2l1314:
  2086  00057E                     ;main.c: 264:          value /= 10;
  2087                           	movff	(c:ltoa@value),(c:___lldiv@dividend)
  2088  00057E  C012  F001         	movff	(c:ltoa@value+1),(c:___lldiv@dividend+1)
  2089  000582  C013  F002         	movff	(c:ltoa@value+2),(c:___lldiv@dividend+2)
  2090  000586  C014  F003         	movff	(c:ltoa@value+3),(c:___lldiv@dividend+3)
  2091  00058A  C015  F004         	movlw	low(0Ah)
  2092  00058E  0E0A               	movwf	((c:___lldiv@divisor)),c
  2093  000590  6E05               	movlw	high(0Ah)
  2094  000592  0E00               	movwf	((c:___lldiv@divisor+1)),c
  2095  000594  6E06               	movlw	low highword(0Ah)
  2096  000596  0E00               	movwf	((c:___lldiv@divisor+2)),c
  2097  000598  6E07               	movlw	high highword(0Ah)
  2098  00059A  0E00               	movwf	((c:___lldiv@divisor+3)),c
  2099  00059C  6E08               	call	___lldiv	;wreg free
  2100  00059E  ECFE  F002         	movff	0+?___lldiv,(c:ltoa@value)
  2101  0005A2  C001  F012         	movff	1+?___lldiv,(c:ltoa@value+1)
  2102  0005A6  C002  F013         	movff	2+?___lldiv,(c:ltoa@value+2)
  2103  0005AA  C003  F014         	movff	3+?___lldiv,(c:ltoa@value+3)
  2104  0005AE  C004  F015         	
  2105                           	line	265
  2106                           	
  2107                           i2l1316:
  2108  0005B2                     ;main.c: 265:          if (pos==6){
  2109                           		movlw	6
  2110  0005B2  0E06               	xorwf	((c:ltoa@pos)),c,w
  2111  0005B4  181A               iorwf	((c:ltoa@pos+1)),c,w
  2112  0005B6  101B               	btfss	status,2
  2113  0005B8  A4D8               	goto	i2u67_41
  2114  0005BA  EFE1  F002         	goto	i2u67_40
  2115  0005BE  EFE3  F002         
  2116                           i2u67_41:
  2117  0005C2                     	goto	i2l1320
  2118  0005C2  EFF0  F002         i2u67_40:
  2119  0005C6                     	line	266
  2120                           	
  2121                           i2l1318:
  2122  0005C6                     ;main.c: 266:              buffer[--c]=',';
  2123                           	decf	((c:ltoa@c)),c
  2124  0005C6  061C               	btfss	status,0
  2125  0005C8  A0D8               	decf	((c:ltoa@c+1)),c
  2126  0005CA  061D               	movf	((c:ltoa@c)),c,w
  2127  0005CC  501C               	addwf	((c:ltoa@buffer)),c,w
  2128  0005CE  240E               	movwf	c:fsr2l
  2129  0005D0  6ED9               	movf	((c:ltoa@c+1)),c,w
  2130  0005D2  501D               	addwfc	((c:ltoa@buffer+1)),c,w
  2131  0005D4  200F               	movwf	1+c:fsr2l
  2132  0005D6  6EDA               	movlw	low(02Ch)
  2133  0005D8  0E2C               	movwf	indf2
  2134  0005DA  6EDF               	goto	i2l1320
  2135  0005DC  EFF0  F002         	line	267
  2136                           ;main.c: 267:          }
  2137                           	
  2138                           i2l153:
  2139  0005E0                     	line	268
  2140                           	
  2141                           i2l1320:
  2142  0005E0                     ;main.c: 268:      } while (value);
  2143                           	movf	((c:ltoa@value)),c,w
  2144  0005E0  5012               iorwf	((c:ltoa@value+1)),c,w
  2145  0005E2  1013               iorwf	((c:ltoa@value+2)),c,w
  2146  0005E4  1014               iorwf	((c:ltoa@value+3)),c,w
  2147  0005E6  1015               	btfss	status,2
  2148  0005E8  A4D8               	goto	i2u68_41
  2149  0005EA  EFF9  F002         	goto	i2u68_40
  2150  0005EE  EFFB  F002         
  2151                           i2u68_41:
  2152  0005F2                     	goto	i2l1310
  2153  0005F2  EF9F  F002         i2u68_40:
  2154  0005F6                     	goto	i2l155
  2155  0005F6  EFFD  F002         	
  2156                           i2l154:
  2157  0005FA                     	line	271
  2158                           ;main.c: 270:      return;
  2159                           	
  2160                           i2l155:
  2161  0005FA                     	return	;funcret
  2162  0005FA  0012               	opt stack 0
  2163                           GLOBAL	__end_of_ltoa
  2164                           	__end_of_ltoa:
  2165  0005FC                     	signat	_ltoa,12409
  2166                           	global	___llmod
  2167                           
  2168 ;; *************** function ___llmod *****************
  2169 ;; Defined at:
  2170 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  dividend        4    0[COMRAM] unsigned long 
  2173 ;;  divisor         4    4[COMRAM] unsigned long 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  counter         1    8[COMRAM] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  4    0[COMRAM] unsigned long 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0
  2185 ;;      Params:         8       0
  2186 ;;      Locals:         1       0
  2187 ;;      Temps:          0       0
  2188 ;;      Totals:         9       0
  2189 ;;Total ram usage:        9 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_ltoa
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           psect	text9,class=CODE,space=0,reloc=2,group=1
  2198                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
  2199                           	line	7
  2200                           global __ptext9
  2201                           __ptext9:
  2202  0006B4                     psect	text9
  2203                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\llmod.c"
  2204                           	line	7
  2205                           	global	__size_of___llmod
  2206                           	__size_of___llmod	equ	__end_of___llmod-___llmod
  2207  0000                     	
  2208                           ___llmod:
  2209  0006B4                     ;incstack = 0
  2210                           	opt	stack 27
  2211                           	line	12
  2212                           	
  2213                           i2l1230:
  2214  0006B4                     	movf	((c:___llmod@divisor)),c,w
  2215  0006B4  5005               iorwf	((c:___llmod@divisor+1)),c,w
  2216  0006B6  1006               iorwf	((c:___llmod@divisor+2)),c,w
  2217  0006B8  1007               iorwf	((c:___llmod@divisor+3)),c,w
  2218  0006BA  1008               	btfsc	status,2
  2219  0006BC  B4D8               	goto	i2u53_41
  2220  0006BE  EF63  F003         	goto	i2u53_40
  2221  0006C2  EF65  F003         
  2222                           i2u53_41:
  2223  0006C6                     	goto	i2l578
  2224  0006C6  EF9F  F003         i2u53_40:
  2225  0006CA                     	line	13
  2226                           	
  2227                           i2l1232:
  2228  0006CA                     	movlw	low(01h)
  2229  0006CA  0E01               	movwf	((c:___llmod@counter)),c
  2230  0006CC  6E09               	line	14
  2231                           	goto	i2l1236
  2232  0006CE  EF71  F003         	
  2233                           i2l580:
  2234  0006D2                     	line	15
  2235                           	
  2236                           i2l1234:
  2237  0006D2                     	bcf	status,0
  2238  0006D2  90D8               	rlcf	((c:___llmod@divisor)),c
  2239  0006D4  3605               	rlcf	((c:___llmod@divisor+1)),c
  2240  0006D6  3606               	rlcf	((c:___llmod@divisor+2)),c
  2241  0006D8  3607               	rlcf	((c:___llmod@divisor+3)),c
  2242  0006DA  3608               	line	16
  2243                           	incf	((c:___llmod@counter)),c
  2244  0006DC  2A09               	goto	i2l1236
  2245  0006DE  EF71  F003         	line	17
  2246                           	
  2247                           i2l579:
  2248  0006E2                     	line	14
  2249                           	
  2250                           i2l1236:
  2251  0006E2                     	
  2252                           	btfss	((c:___llmod@divisor+3)),c,(31)&7
  2253  0006E2  AE08               	goto	i2u54_41
  2254  0006E4  EF76  F003         	goto	i2u54_40
  2255  0006E8  EF78  F003         i2u54_41:
  2256  0006EC                     	goto	i2l1234
  2257  0006EC  EF69  F003         i2u54_40:
  2258  0006F0                     	goto	i2l1238
  2259  0006F0  EF7C  F003         	
  2260                           i2l581:
  2261  0006F4                     	goto	i2l1238
  2262  0006F4  EF7C  F003         	line	18
  2263                           	
  2264                           i2l582:
  2265  0006F8                     	line	19
  2266                           	
  2267                           i2l1238:
  2268  0006F8                     		movf	((c:___llmod@divisor)),c,w
  2269  0006F8  5005               	subwf	((c:___llmod@dividend)),c,w
  2270  0006FA  5C01               	movf	((c:___llmod@divisor+1)),c,w
  2271  0006FC  5006               	subwfb	((c:___llmod@dividend+1)),c,w
  2272  0006FE  5802               	movf	((c:___llmod@divisor+2)),c,w
  2273  000700  5007               	subwfb	((c:___llmod@dividend+2)),c,w
  2274  000702  5803               	movf	((c:___llmod@divisor+3)),c,w
  2275  000704  5008               	subwfb	((c:___llmod@dividend+3)),c,w
  2276  000706  5804               	btfss	status,0
  2277  000708  A0D8               	goto	i2u55_41
  2278  00070A  EF89  F003         	goto	i2u55_40
  2279  00070E  EF8B  F003         
  2280                           i2u55_41:
  2281  000712                     	goto	i2l1242
  2282  000712  EF95  F003         i2u55_40:
  2283  000716                     	line	20
  2284                           	
  2285                           i2l1240:
  2286  000716                     	movf	((c:___llmod@divisor)),c,w
  2287  000716  5005               	subwf	((c:___llmod@dividend)),c
  2288  000718  5E01               	movf	((c:___llmod@divisor+1)),c,w
  2289  00071A  5006               	subwfb	((c:___llmod@dividend+1)),c
  2290  00071C  5A02               	movf	((c:___llmod@divisor+2)),c,w
  2291  00071E  5007               	subwfb	((c:___llmod@dividend+2)),c
  2292  000720  5A03               	movf	((c:___llmod@divisor+3)),c,w
  2293  000722  5008               	subwfb	((c:___llmod@dividend+3)),c
  2294  000724  5A04               	goto	i2l1242
  2295  000726  EF95  F003         	
  2296                           i2l583:
  2297  00072A                     	line	21
  2298                           	
  2299                           i2l1242:
  2300  00072A                     	bcf	status,0
  2301  00072A  90D8               	rrcf	((c:___llmod@divisor+3)),c
  2302  00072C  3208               	rrcf	((c:___llmod@divisor+2)),c
  2303  00072E  3207               	rrcf	((c:___llmod@divisor+1)),c
  2304  000730  3206               	rrcf	((c:___llmod@divisor)),c
  2305  000732  3205               	line	22
  2306                           	
  2307                           i2l1244:
  2308  000734                     	decfsz	((c:___llmod@counter)),c
  2309  000734  2E09               	
  2310                           	goto	i2l1238
  2311  000736  EF7C  F003         	goto	i2l578
  2312  00073A  EF9F  F003         	
  2313                           i2l584:
  2314  00073E                     	line	23
  2315                           	
  2316                           i2l578:
  2317  00073E                     	line	24
  2318                           	movff	(c:___llmod@dividend),(c:?___llmod)
  2319  00073E  C001  F001         	movff	(c:___llmod@dividend+1),(c:?___llmod+1)
  2320  000742  C002  F002         	movff	(c:___llmod@dividend+2),(c:?___llmod+2)
  2321  000746  C003  F003         	movff	(c:___llmod@dividend+3),(c:?___llmod+3)
  2322  00074A  C004  F004         	line	25
  2323                           	
  2324                           i2l585:
  2325  00074E                     	return	;funcret
  2326  00074E  0012               	opt stack 0
  2327                           GLOBAL	__end_of___llmod
  2328                           	__end_of___llmod:
  2329  000750                     	signat	___llmod,8316
  2330                           	global	___lldiv
  2331                           
  2332 ;; *************** function ___lldiv *****************
  2333 ;; Defined at:
  2334 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  dividend        4    0[COMRAM] unsigned long 
  2337 ;;  divisor         4    4[COMRAM] unsigned long 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  quotient        4    8[COMRAM] unsigned long 
  2340 ;;  counter         1   12[COMRAM] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  4    0[COMRAM] unsigned long 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0
  2350 ;;      Params:         8       0
  2351 ;;      Locals:         5       0
  2352 ;;      Temps:          0       0
  2353 ;;      Totals:        13       0
  2354 ;;Total ram usage:       13 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_ltoa
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           psect	text10,class=CODE,space=0,reloc=2,group=1
  2363                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2364                           	line	7
  2365                           global __ptext10
  2366                           __ptext10:
  2367  0005FC                     psect	text10
  2368                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2369                           	line	7
  2370                           	global	__size_of___lldiv
  2371                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  2372  0000                     	
  2373                           ___lldiv:
  2374  0005FC                     ;incstack = 0
  2375                           	opt	stack 27
  2376                           	line	13
  2377                           	
  2378                           i2l1208:
  2379  0005FC                     	movlw	low(0)
  2380  0005FC  0E00               	movwf	((c:___lldiv@quotient)),c
  2381  0005FE  6E09               	movlw	high(0)
  2382  000600  0E00               	movwf	((c:___lldiv@quotient+1)),c
  2383  000602  6E0A               	movlw	low highword(0)
  2384  000604  0E00               	movwf	((c:___lldiv@quotient+2)),c
  2385  000606  6E0B               	movlw	high highword(0)
  2386  000608  0E00               	movwf	((c:___lldiv@quotient+3)),c
  2387  00060A  6E0C               	line	14
  2388                           	
  2389                           i2l1210:
  2390  00060C                     	movf	((c:___lldiv@divisor)),c,w
  2391  00060C  5005               iorwf	((c:___lldiv@divisor+1)),c,w
  2392  00060E  1006               iorwf	((c:___lldiv@divisor+2)),c,w
  2393  000610  1007               iorwf	((c:___lldiv@divisor+3)),c,w
  2394  000612  1008               	btfsc	status,2
  2395  000614  B4D8               	goto	i2u50_41
  2396  000616  EF0F  F003         	goto	i2u50_40
  2397  00061A  EF11  F003         
  2398                           i2u50_41:
  2399  00061E                     	goto	i2l185
  2400  00061E  EF51  F003         i2u50_40:
  2401  000622                     	line	15
  2402                           	
  2403                           i2l1212:
  2404  000622                     	movlw	low(01h)
  2405  000622  0E01               	movwf	((c:___lldiv@counter)),c
  2406  000624  6E0D               	line	16
  2407                           	goto	i2l1216
  2408  000626  EF1D  F003         	
  2409                           i2l187:
  2410  00062A                     	line	17
  2411                           	
  2412                           i2l1214:
  2413  00062A                     	bcf	status,0
  2414  00062A  90D8               	rlcf	((c:___lldiv@divisor)),c
  2415  00062C  3605               	rlcf	((c:___lldiv@divisor+1)),c
  2416  00062E  3606               	rlcf	((c:___lldiv@divisor+2)),c
  2417  000630  3607               	rlcf	((c:___lldiv@divisor+3)),c
  2418  000632  3608               	line	18
  2419                           	incf	((c:___lldiv@counter)),c
  2420  000634  2A0D               	goto	i2l1216
  2421  000636  EF1D  F003         	line	19
  2422                           	
  2423                           i2l186:
  2424  00063A                     	line	16
  2425                           	
  2426                           i2l1216:
  2427  00063A                     	
  2428                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  2429  00063A  AE08               	goto	i2u51_41
  2430  00063C  EF22  F003         	goto	i2u51_40
  2431  000640  EF24  F003         i2u51_41:
  2432  000644                     	goto	i2l1214
  2433  000644  EF15  F003         i2u51_40:
  2434  000648                     	goto	i2l1218
  2435  000648  EF28  F003         	
  2436                           i2l188:
  2437  00064C                     	goto	i2l1218
  2438  00064C  EF28  F003         	line	20
  2439                           	
  2440                           i2l189:
  2441  000650                     	line	21
  2442                           	
  2443                           i2l1218:
  2444  000650                     	bcf	status,0
  2445  000650  90D8               	rlcf	((c:___lldiv@quotient)),c
  2446  000652  3609               	rlcf	((c:___lldiv@quotient+1)),c
  2447  000654  360A               	rlcf	((c:___lldiv@quotient+2)),c
  2448  000656  360B               	rlcf	((c:___lldiv@quotient+3)),c
  2449  000658  360C               	line	22
  2450                           	
  2451                           i2l1220:
  2452  00065A                     		movf	((c:___lldiv@divisor)),c,w
  2453  00065A  5005               	subwf	((c:___lldiv@dividend)),c,w
  2454  00065C  5C01               	movf	((c:___lldiv@divisor+1)),c,w
  2455  00065E  5006               	subwfb	((c:___lldiv@dividend+1)),c,w
  2456  000660  5802               	movf	((c:___lldiv@divisor+2)),c,w
  2457  000662  5007               	subwfb	((c:___lldiv@dividend+2)),c,w
  2458  000664  5803               	movf	((c:___lldiv@divisor+3)),c,w
  2459  000666  5008               	subwfb	((c:___lldiv@dividend+3)),c,w
  2460  000668  5804               	btfss	status,0
  2461  00066A  A0D8               	goto	i2u52_41
  2462  00066C  EF3A  F003         	goto	i2u52_40
  2463  000670  EF3C  F003         
  2464                           i2u52_41:
  2465  000674                     	goto	i2l1226
  2466  000674  EF47  F003         i2u52_40:
  2467  000678                     	line	23
  2468                           	
  2469                           i2l1222:
  2470  000678                     	movf	((c:___lldiv@divisor)),c,w
  2471  000678  5005               	subwf	((c:___lldiv@dividend)),c
  2472  00067A  5E01               	movf	((c:___lldiv@divisor+1)),c,w
  2473  00067C  5006               	subwfb	((c:___lldiv@dividend+1)),c
  2474  00067E  5A02               	movf	((c:___lldiv@divisor+2)),c,w
  2475  000680  5007               	subwfb	((c:___lldiv@dividend+2)),c
  2476  000682  5A03               	movf	((c:___lldiv@divisor+3)),c,w
  2477  000684  5008               	subwfb	((c:___lldiv@dividend+3)),c
  2478  000686  5A04               	line	24
  2479                           	
  2480                           i2l1224:
  2481  000688                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  2482  000688  8009               	goto	i2l1226
  2483  00068A  EF47  F003         	line	25
  2484                           	
  2485                           i2l190:
  2486  00068E                     	line	26
  2487                           	
  2488                           i2l1226:
  2489  00068E                     	bcf	status,0
  2490  00068E  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  2491  000690  3208               	rrcf	((c:___lldiv@divisor+2)),c
  2492  000692  3207               	rrcf	((c:___lldiv@divisor+1)),c
  2493  000694  3206               	rrcf	((c:___lldiv@divisor)),c
  2494  000696  3205               	line	27
  2495                           	
  2496                           i2l1228:
  2497  000698                     	decfsz	((c:___lldiv@counter)),c
  2498  000698  2E0D               	
  2499                           	goto	i2l1218
  2500  00069A  EF28  F003         	goto	i2l185
  2501  00069E  EF51  F003         	
  2502                           i2l191:
  2503  0006A2                     	line	28
  2504                           	
  2505                           i2l185:
  2506  0006A2                     	line	29
  2507                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  2508  0006A2  C009  F001         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  2509  0006A6  C00A  F002         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  2510  0006AA  C00B  F003         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  2511  0006AE  C00C  F004         	line	30
  2512                           	
  2513                           i2l192:
  2514  0006B2                     	return	;funcret
  2515  0006B2  0012               	opt stack 0
  2516                           GLOBAL	__end_of___lldiv
  2517                           	__end_of___lldiv:
  2518  0006B4                     	signat	___lldiv,8316
  2519                           	global	_handleTX
  2520                           
  2521 ;; *************** function _handleTX *****************
  2522 ;; Defined at:
  2523 ;;		line 198 in file "main.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0
  2537 ;;      Params:         0       0
  2538 ;;      Locals:         0       0
  2539 ;;      Temps:          4       0
  2540 ;;      Totals:         4       0
  2541 ;;Total ram usage:        4 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    2
  2544 ;; This function calls:
  2545 ;;		_clearBufferTx
  2546 ;; This function is called by:
  2547 ;;		_ISR
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2551                           	file	"main.c"
  2552                           	line	198
  2553                           global __ptext11
  2554                           __ptext11:
  2555  000750                     psect	text11
  2556                           	file	"main.c"
  2557                           	line	198
  2558                           	global	__size_of_handleTX
  2559                           	__size_of_handleTX	equ	__end_of_handleTX-_handleTX
  2560  0000                     	
  2561                           _handleTX:
  2562  000750                     ;incstack = 0
  2563                           	opt	stack 26
  2564                           	line	199
  2565                           	
  2566                           i2l1286:
  2567  000750                     ;main.c: 199:     if(bufferTxSize==0){
  2568                           	movf	((c:_bufferTxSize)),c,w
  2569  000750  5046               iorwf	((c:_bufferTxSize+1)),c,w
  2570  000752  1047               	btfss	status,2
  2571  000754  A4D8               	goto	i2u65_41
  2572  000756  EFAF  F003         	goto	i2u65_40
  2573  00075A  EFB1  F003         
  2574                           i2u65_41:
  2575  00075E                     	goto	i2l1294
  2576  00075E  EFBA  F003         i2u65_40:
  2577  000762                     	line	200
  2578                           	
  2579                           i2l1288:
  2580  000762                     ;main.c: 200:         bufferTxByteSend=0;
  2581                           	movlw	high(0)
  2582  000762  0E00               	movwf	((c:_bufferTxByteSend+1)),c
  2583  000764  6E45               	movlw	low(0)
  2584  000766  0E00               	movwf	((c:_bufferTxByteSend)),c
  2585  000768  6E44               	line	201
  2586                           	
  2587                           i2l1290:
  2588  00076A                     ;main.c: 201:         PIE1bits.TX1IE=0;
  2589                           	bcf	((c:3997)),c,4	;volatile
  2590  00076A  989D               	goto	i2l129
  2591  00076C  EFE1  F003         	line	202
  2592                           	
  2593                           i2l1292:
  2594  000770                     ;main.c: 202:         return;
  2595                           	goto	i2l129
  2596  000770  EFE1  F003         	line	203
  2597                           ;main.c: 203:     }
  2598                           	
  2599                           i2l128:
  2600  000774                     	line	204
  2601                           	
  2602                           i2l1294:
  2603  000774                     ;main.c: 204:     if (bufferTxByteSend < bufferTxSize){
  2604                           		movf	((c:_bufferTxSize)),c,w
  2605  000774  5046               	subwf	((c:_bufferTxByteSend)),c,w
  2606  000776  5C44               	movf	((c:_bufferTxSize+1)),c,w
  2607  000778  5047               	subwfb	((c:_bufferTxByteSend+1)),c,w
  2608  00077A  5845               	btfsc	status,0
  2609  00077C  B0D8               	goto	i2u66_41
  2610  00077E  EFC3  F003         	goto	i2u66_40
  2611  000782  EFC5  F003         
  2612                           i2u66_41:
  2613  000786                     	goto	i2l1300
  2614  000786  EFDD  F003         i2u66_40:
  2615  00078A                     	line	205
  2616                           	
  2617                           i2l1296:
  2618  00078A                     ;main.c: 205:         bufferTxByteSend++;
  2619                           	infsnz	((c:_bufferTxByteSend)),c
  2620  00078A  4A44               	incf	((c:_bufferTxByteSend+1)),c
  2621  00078C  2A45               	line	206
  2622                           	
  2623                           i2l1298:
  2624  00078E                     ;main.c: 206:         TXREG = bufferTx[bufferTxByteSend-1];
  2625                           	movlw	low(0FFFFh)
  2626  00078E  0EFF               	movwf	(??_handleTX+0+0)&0ffh,c
  2627  000790  6E0F               	movlw	high(0FFFFh)
  2628  000792  0EFF               	movwf	1+(??_handleTX+0+0)&0ffh,c
  2629  000794  6E10               	movff	(c:_bufferTxByteSend),??_handleTX+2+0
  2630  000796  C044  F011         	movff	(c:_bufferTxByteSend+1),??_handleTX+2+0+1
  2631  00079A  C045  F012         	movf	(??_handleTX+0+0),c,w
  2632  00079E  500F               	addwf	(??_handleTX+2+0),c
  2633  0007A0  2611               	movf	(??_handleTX+0+1),c,w
  2634  0007A2  5010               	addwfc	(??_handleTX+2+1),c
  2635  0007A4  2212               	movlw	low(_bufferTx)
  2636  0007A6  0EB2               	addwf	(??_handleTX+2+0),c,w
  2637  0007A8  2411               	movwf	c:fsr2l
  2638  0007AA  6ED9               	movlw	high(_bufferTx)
  2639  0007AC  0E00               	addwfc	(??_handleTX+2+1),c,w
  2640  0007AE  2012               	movwf	1+c:fsr2l
  2641  0007B0  6EDA               	movf	indf2,w
  2642  0007B2  50DF               	movwf	((c:4013)),c	;volatile
  2643  0007B4  6EAD               	line	207
  2644                           ;main.c: 207:     }else{
  2645                           	goto	i2l129
  2646  0007B6  EFE1  F003         	
  2647                           i2l130:
  2648  0007BA                     	line	208
  2649                           	
  2650                           i2l1300:
  2651  0007BA                     ;main.c: 208:         clearBufferTx();
  2652                           	call	_clearBufferTx	;wreg free
  2653  0007BA  ECCF  F004         	goto	i2l129
  2654  0007BE  EFE1  F003         	line	209
  2655                           ;main.c: 209:     }
  2656                           	
  2657                           i2l131:
  2658  0007C2                     	line	211
  2659                           	
  2660                           i2l129:
  2661  0007C2                     	return	;funcret
  2662  0007C2  0012               	opt stack 0
  2663                           GLOBAL	__end_of_handleTX
  2664                           	__end_of_handleTX:
  2665  0007C4                     	signat	_handleTX,89
  2666                           	global	_clearBufferTx
  2667                           
  2668 ;; *************** function _clearBufferTx *****************
  2669 ;; Defined at:
  2670 ;;		line 227 in file "main.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0
  2684 ;;      Params:         0       0
  2685 ;;      Locals:         0       0
  2686 ;;      Temps:          0       0
  2687 ;;      Totals:         0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    1
  2691 ;; This function calls:
  2692 ;;		_memset
  2693 ;; This function is called by:
  2694 ;;		_handleTX
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           psect	text12,class=CODE,space=0,reloc=2,group=0
  2698                           	line	227
  2699                           global __ptext12
  2700                           __ptext12:
  2701  00099E                     psect	text12
  2702                           	file	"main.c"
  2703                           	line	227
  2704                           	global	__size_of_clearBufferTx
  2705                           	__size_of_clearBufferTx	equ	__end_of_clearBufferTx-_clearBufferTx
  2706  0000                     	
  2707                           _clearBufferTx:
  2708  00099E                     ;incstack = 0
  2709                           	opt	stack 26
  2710                           	line	228
  2711                           	
  2712                           i2l1204:
  2713  00099E                     ;main.c: 228:     bufferTxByteSend = 0;
  2714                           	movlw	high(0)
  2715  00099E  0E00               	movwf	((c:_bufferTxByteSend+1)),c
  2716  0009A0  6E45               	movlw	low(0)
  2717  0009A2  0E00               	movwf	((c:_bufferTxByteSend)),c
  2718  0009A4  6E44               	line	229
  2719                           ;main.c: 229:     bufferTxSize=0;
  2720                           	movlw	high(0)
  2721  0009A6  0E00               	movwf	((c:_bufferTxSize+1)),c
  2722  0009A8  6E47               	movlw	low(0)
  2723  0009AA  0E00               	movwf	((c:_bufferTxSize)),c
  2724  0009AC  6E46               	line	230
  2725                           	
  2726                           i2l1206:
  2727  0009AE                     ;main.c: 230:     memset(bufferTx,0,50);
  2728                           		movlw	low(_bufferTx)
  2729  0009AE  0EB2               	movwf	((c:memset@dest)),c
  2730  0009B0  6E01               	movlw	high(_bufferTx)
  2731  0009B2  0E00               	movwf	((c:memset@dest+1)),c
  2732  0009B4  6E02               
  2733                           	movlw	high(0)
  2734  0009B6  0E00               	movwf	((c:memset@c+1)),c
  2735  0009B8  6E04               	movlw	low(0)
  2736  0009BA  0E00               	movwf	((c:memset@c)),c
  2737  0009BC  6E03               	movlw	high(032h)
  2738  0009BE  0E00               	movwf	((c:memset@n+1)),c
  2739  0009C0  6E06               	movlw	low(032h)
  2740  0009C2  0E32               	movwf	((c:memset@n)),c
  2741  0009C4  6E05               	call	_memset	;wreg free
  2742  0009C6  ECFB  F000         	line	231
  2743                           	
  2744                           i2l143:
  2745  0009CA                     	return	;funcret
  2746  0009CA  0012               	opt stack 0
  2747                           GLOBAL	__end_of_clearBufferTx
  2748                           	__end_of_clearBufferTx:
  2749  0009CC                     	signat	_clearBufferTx,89
  2750                           	global	_handleRX
  2751                           
  2752 ;; *************** function _handleRX *****************
  2753 ;; Defined at:
  2754 ;;		line 168 in file "main.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  i               2   19[COMRAM] int 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0
  2768 ;;      Params:         0       0
  2769 ;;      Locals:         2       0
  2770 ;;      Temps:          5       0
  2771 ;;      Totals:         7       0
  2772 ;;Total ram usage:        7 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    2
  2775 ;; This function calls:
  2776 ;;		_clearBufferRx
  2777 ;;		_startTX
  2778 ;;		_startTimer0
  2779 ;; This function is called by:
  2780 ;;		_ISR
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           psect	text13,class=CODE,space=0,reloc=2,group=0
  2784                           	line	168
  2785                           global __ptext13
  2786                           __ptext13:
  2787  0003B4                     psect	text13
  2788                           	file	"main.c"
  2789                           	line	168
  2790                           	global	__size_of_handleRX
  2791                           	__size_of_handleRX	equ	__end_of_handleRX-_handleRX
  2792  0000                     	
  2793                           _handleRX:
  2794  0003B4                     ;incstack = 0
  2795                           	opt	stack 26
  2796                           	line	169
  2797                           	
  2798                           i2l1248:
  2799  0003B4                     ;main.c: 169:     bufferRxSize++;
  2800                           	infsnz	((c:_bufferRxSize)),c
  2801  0003B4  4A42               	incf	((c:_bufferRxSize+1)),c
  2802  0003B6  2A43               	line	170
  2803                           	
  2804                           i2l1250:
  2805  0003B8                     ;main.c: 170:     bufferRx[bufferRxSize-1] = RCREG;
  2806                           	movlw	low(0FFFFh)
  2807  0003B8  0EFF               	movwf	(??_handleRX+0+0)&0ffh,c
  2808  0003BA  6E0F               	movlw	high(0FFFFh)
  2809  0003BC  0EFF               	movwf	1+(??_handleRX+0+0)&0ffh,c
  2810  0003BE  6E10               	movff	(c:_bufferRxSize),??_handleRX+2+0
  2811  0003C0  C042  F011         	movff	(c:_bufferRxSize+1),??_handleRX+2+0+1
  2812  0003C4  C043  F012         	movf	(??_handleRX+0+0),c,w
  2813  0003C8  500F               	addwf	(??_handleRX+2+0),c
  2814  0003CA  2611               	movf	(??_handleRX+0+1),c,w
  2815  0003CC  5010               	addwfc	(??_handleRX+2+1),c
  2816  0003CE  2212               	movlw	low(_bufferRx)
  2817  0003D0  0E80               	addwf	(??_handleRX+2+0),c,w
  2818  0003D2  2411               	movwf	c:fsr2l
  2819  0003D4  6ED9               	movlw	high(_bufferRx)
  2820  0003D6  0E00               	addwfc	(??_handleRX+2+1),c,w
  2821  0003D8  2012               	movwf	1+c:fsr2l
  2822  0003DA  6EDA               	movff	(c:4014),indf2	;volatile
  2823  0003DC  CFAE FFDF          
  2824                           	line	173
  2825                           	
  2826                           i2l1252:
  2827  0003E0                     ;main.c: 173:     if(bufferRxSize > 1 && bufferRx[bufferRxSize-2]==0xd && bufferRx[buffe
                                 rRxSize-1] == 0xa){
  2828                           		movf	((c:_bufferRxSize+1)),c,w
  2829  0003E0  5043               	bnz	i2u59_40
  2830  0003E2  E109               	movlw	2
  2831  0003E4  0E02               	subwf	 ((c:_bufferRxSize)),c,w
  2832  0003E6  5C42               	btfss	status,0
  2833  0003E8  A0D8               	goto	i2u59_41
  2834  0003EA  EFF9  F001         	goto	i2u59_40
  2835  0003EE  EFFB  F001         
  2836                           i2u59_41:
  2837  0003F2                     	goto	i2l125
  2838  0003F2  EF84  F002         i2u59_40:
  2839  0003F6                     	
  2840                           i2l1254:
  2841  0003F6                     	movlw	low(0FFFEh)
  2842  0003F6  0EFE               	movwf	(??_handleRX+0+0)&0ffh,c
  2843  0003F8  6E0F               	movlw	high(0FFFEh)
  2844  0003FA  0EFF               	movwf	1+(??_handleRX+0+0)&0ffh,c
  2845  0003FC  6E10               	movff	(c:_bufferRxSize),??_handleRX+2+0
  2846  0003FE  C042  F011         	movff	(c:_bufferRxSize+1),??_handleRX+2+0+1
  2847  000402  C043  F012         	movf	(??_handleRX+0+0),c,w
  2848  000406  500F               	addwf	(??_handleRX+2+0),c
  2849  000408  2611               	movf	(??_handleRX+0+1),c,w
  2850  00040A  5010               	addwfc	(??_handleRX+2+1),c
  2851  00040C  2212               	movlw	low(_bufferRx)
  2852  00040E  0E80               	addwf	(??_handleRX+2+0),c,w
  2853  000410  2411               	movwf	c:fsr2l
  2854  000412  6ED9               	movlw	high(_bufferRx)
  2855  000414  0E00               	addwfc	(??_handleRX+2+1),c,w
  2856  000416  2012               	movwf	1+c:fsr2l
  2857  000418  6EDA               	movlw	13
  2858  00041A  0E0D               	xorwf	postinc2,w
  2859  00041C  18DE               	btfss	status,2
  2860  00041E  A4D8               	goto	i2u60_41
  2861  000420  EF14  F002         	goto	i2u60_40
  2862  000424  EF16  F002         
  2863                           i2u60_41:
  2864  000428                     	goto	i2l125
  2865  000428  EF84  F002         i2u60_40:
  2866  00042C                     	
  2867                           i2l1256:
  2868  00042C                     	movlw	low(0FFFFh)
  2869  00042C  0EFF               	movwf	(??_handleRX+0+0)&0ffh,c
  2870  00042E  6E0F               	movlw	high(0FFFFh)
  2871  000430  0EFF               	movwf	1+(??_handleRX+0+0)&0ffh,c
  2872  000432  6E10               	movff	(c:_bufferRxSize),??_handleRX+2+0
  2873  000434  C042  F011         	movff	(c:_bufferRxSize+1),??_handleRX+2+0+1
  2874  000438  C043  F012         	movf	(??_handleRX+0+0),c,w
  2875  00043C  500F               	addwf	(??_handleRX+2+0),c
  2876  00043E  2611               	movf	(??_handleRX+0+1),c,w
  2877  000440  5010               	addwfc	(??_handleRX+2+1),c
  2878  000442  2212               	movlw	low(_bufferRx)
  2879  000444  0E80               	addwf	(??_handleRX+2+0),c,w
  2880  000446  2411               	movwf	c:fsr2l
  2881  000448  6ED9               	movlw	high(_bufferRx)
  2882  00044A  0E00               	addwfc	(??_handleRX+2+1),c,w
  2883  00044C  2012               	movwf	1+c:fsr2l
  2884  00044E  6EDA               	movlw	10
  2885  000450  0E0A               	xorwf	postinc2,w
  2886  000452  18DE               	btfss	status,2
  2887  000454  A4D8               	goto	i2u61_41
  2888  000456  EF2F  F002         	goto	i2u61_40
  2889  00045A  EF31  F002         
  2890                           i2u61_41:
  2891  00045E                     	goto	i2l125
  2892  00045E  EF84  F002         i2u61_40:
  2893  000462                     	line	174
  2894                           	
  2895                           i2l1258:
  2896  000462                     ;main.c: 174:         if(bufferRx[0]=='1'){
  2897                           		movlw	49
  2898  000462  0E31               	movlb	0	; () banked
  2899  000464  0100               	xorwf	((_bufferRx))&0ffh,w
  2900  000466  1980               	btfss	status,2
  2901  000468  A4D8               	goto	i2u62_41
  2902  00046A  EF39  F002         	goto	i2u62_40
  2903  00046E  EF3B  F002         
  2904                           i2u62_41:
  2905  000472                     	goto	i2l1272
  2906  000472  EF45  F002         i2u62_40:
  2907  000476                     	line	175
  2908                           	
  2909                           i2l1260:; BSR set to: 0
  2910  000476                     
  2911                           ;main.c: 175:             clearBufferRx();
  2912                           	call	_clearBufferRx	;wreg free
  2913  000476  EC0E  F005         	line	176
  2914                           	
  2915                           i2l1262:
  2916  00047A                     ;main.c: 176:             TRISAbits.RA0=0;
  2917                           	bcf	((c:3986)),c,0	;volatile
  2918  00047A  9092               	line	177
  2919                           	
  2920                           i2l1264:
  2921  00047C                     ;main.c: 177:             PORTAbits.RA0=1;
  2922                           	bsf	((c:3968)),c,0	;volatile
  2923  00047C  8080               	line	179
  2924                           	
  2925                           i2l1266:
  2926  00047E                     ;main.c: 179:             INTCONbits.INT0IF=0;
  2927                           	bcf	((c:4082)),c,1	;volatile
  2928  00047E  92F2               	line	180
  2929                           	
  2930                           i2l1268:
  2931  000480                     ;main.c: 180:             INTCONbits.INT0IE=1;
  2932                           	bsf	((c:4082)),c,4	;volatile
  2933  000480  88F2               	line	182
  2934                           	
  2935                           i2l1270:
  2936  000482                     ;main.c: 182:             startTimer0();
  2937                           	call	_startTimer0	;wreg free
  2938  000482  EC32  F005         	line	184
  2939                           ;main.c: 184:         }else if(bufferRx[0]=='R'){
  2940                           	goto	i2l125
  2941  000486  EF84  F002         	
  2942                           i2l118:
  2943  00048A                     	
  2944                           i2l1272:
  2945  00048A                     		movlw	82
  2946  00048A  0E52               	movlb	0	; () banked
  2947  00048C  0100               	xorwf	((_bufferRx))&0ffh,w
  2948  00048E  1980               	btfss	status,2
  2949  000490  A4D8               	goto	i2u63_41
  2950  000492  EF4D  F002         	goto	i2u63_40
  2951  000496  EF4F  F002         
  2952                           i2u63_41:
  2953  00049A                     	goto	i2l1284
  2954  00049A  EF7C  F002         i2u63_40:
  2955  00049E                     	line	185
  2956                           	
  2957                           i2l1274:; BSR set to: 0
  2958  00049E                     
  2959                           ;main.c: 185:             for(int i=0;i<=bufferRxSize; i++){
  2960                           	movlw	high(0)
  2961  00049E  0E00               	movwf	((c:handleRX@i+1)),c
  2962  0004A0  6E15               	movlw	low(0)
  2963  0004A2  0E00               	movwf	((c:handleRX@i)),c
  2964  0004A4  6E14               	goto	i2l1280
  2965  0004A6  EF67  F002         	
  2966                           i2l122:; BSR set to: 0
  2967  0004AA                     
  2968                           	line	186
  2969                           	
  2970                           i2l1276:
  2971  0004AA                     ;main.c: 186:                 bufferTx[i] = bufferRx[i];
  2972                           	movlw	low(_bufferRx)
  2973  0004AA  0E80               	addwf	((c:handleRX@i)),c,w
  2974  0004AC  2414               	movwf	c:fsr2l
  2975  0004AE  6ED9               	movlw	high(_bufferRx)
  2976  0004B0  0E00               	addwfc	((c:handleRX@i+1)),c,w
  2977  0004B2  2015               	movwf	1+c:fsr2l
  2978  0004B4  6EDA               	movlw	low(_bufferTx)
  2979  0004B6  0EB2               	addwf	((c:handleRX@i)),c,w
  2980  0004B8  2414               	movwf	c:fsr1l
  2981  0004BA  6EE1               	movlw	high(_bufferTx)
  2982  0004BC  0E00               	addwfc	((c:handleRX@i+1)),c,w
  2983  0004BE  2015               	movwf	1+c:fsr1l
  2984  0004C0  6EE2               	movff	indf2,indf1
  2985  0004C2  CFDF FFE7          	line	187
  2986                           	
  2987                           i2l1278:
  2988  0004C6                     ;main.c: 187:             }
  2989                           	infsnz	((c:handleRX@i)),c
  2990  0004C6  4A14               	incf	((c:handleRX@i+1)),c
  2991  0004C8  2A15               	goto	i2l1280
  2992  0004CA  EF67  F002         	
  2993                           i2l121:
  2994  0004CE                     	
  2995                           i2l1280:
  2996  0004CE                     		movf	((c:handleRX@i)),c,w
  2997  0004CE  5014               	subwf	((c:_bufferRxSize)),c,w
  2998  0004D0  5C42               	movf	((c:handleRX@i+1)),c,w
  2999  0004D2  5015               	subwfb	((c:_bufferRxSize+1)),c,w
  3000  0004D4  5843               	btfsc	status,0
  3001  0004D6  B0D8               	goto	i2u64_41
  3002  0004D8  EF70  F002         	goto	i2u64_40
  3003  0004DC  EF72  F002         
  3004                           i2u64_41:
  3005  0004E0                     	goto	i2l1276
  3006  0004E0  EF55  F002         i2u64_40:
  3007  0004E4                     	
  3008                           i2l123:
  3009  0004E4                     	line	188
  3010                           ;main.c: 188:             bufferTxSize = bufferRxSize;
  3011                           	movff	(c:_bufferRxSize),(c:_bufferTxSize)
  3012  0004E4  C042  F046         	movff	(c:_bufferRxSize+1),(c:_bufferTxSize+1)
  3013  0004E8  C043  F047         	line	189
  3014                           	
  3015                           i2l1282:
  3016  0004EC                     ;main.c: 189:             clearBufferRx();
  3017                           	call	_clearBufferRx	;wreg free
  3018  0004EC  EC0E  F005         	line	190
  3019                           ;main.c: 190:             startTX();
  3020                           	call	_startTX	;wreg free
  3021  0004F0  EC78  F004         	line	191
  3022                           ;main.c: 191:         }else{
  3023                           	goto	i2l125
  3024  0004F4  EF84  F002         	
  3025                           i2l120:
  3026  0004F8                     	line	192
  3027                           	
  3028                           i2l1284:
  3029  0004F8                     ;main.c: 192:             clearBufferRx();
  3030                           	call	_clearBufferRx	;wreg free
  3031  0004F8  EC0E  F005         	goto	i2l125
  3032  0004FC  EF84  F002         	line	193
  3033                           ;main.c: 193:         }
  3034                           	
  3035                           i2l124:
  3036  000500                     	goto	i2l125
  3037  000500  EF84  F002         	
  3038                           i2l119:
  3039  000504                     	goto	i2l125
  3040  000504  EF84  F002         	line	194
  3041                           ;main.c: 194:     }
  3042                           	
  3043                           i2l117:
  3044  000508                     	line	196
  3045                           	
  3046                           i2l125:
  3047  000508                     	return	;funcret
  3048  000508  0012               	opt stack 0
  3049                           GLOBAL	__end_of_handleRX
  3050                           	__end_of_handleRX:
  3051  00050A                     	signat	_handleRX,89
  3052                           	global	_startTimer0
  3053                           
  3054 ;; *************** function _startTimer0 *****************
  3055 ;; Defined at:
  3056 ;;		line 233 in file "main.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0
  3070 ;;      Params:         0       0
  3071 ;;      Locals:         0       0
  3072 ;;      Temps:          0       0
  3073 ;;      Totals:         0       0
  3074 ;;Total ram usage:        0 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_handleRX
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           psect	text14,class=CODE,space=0,reloc=2,group=0
  3083                           	line	233
  3084                           global __ptext14
  3085                           __ptext14:
  3086  000A64                     psect	text14
  3087                           	file	"main.c"
  3088                           	line	233
  3089                           	global	__size_of_startTimer0
  3090                           	__size_of_startTimer0	equ	__end_of_startTimer0-_startTimer0
  3091  0000                     	
  3092                           _startTimer0:
  3093  000A64                     ;incstack = 0
  3094                           	opt	stack 27
  3095                           	line	234
  3096                           	
  3097                           i2l1196:
  3098  000A64                     ;main.c: 234:     T0CONbits.T08BIT=1;
  3099                           	bsf	((c:4053)),c,6	;volatile
  3100  000A64  8CD5               	line	235
  3101                           ;main.c: 235:     T0CONbits.T0CS=0;
  3102                           	bcf	((c:4053)),c,5	;volatile
  3103  000A66  9AD5               	line	236
  3104                           ;main.c: 236:     T0CONbits.T0PS=0x7;
  3105                           		
  3106                           	bsf	((c:4053)),c, 0+0	;volatile
  3107  000A68  80D5               	bsf	((c:4053)),c, 0+1	;volatile
  3108  000A6A  82D5               	bsf	((c:4053)),c, 0+2	;volatile
  3109  000A6C  84D5               
  3110                           	line	238
  3111                           	
  3112                           i2l1198:
  3113  000A6E                     ;main.c: 238:     TMR0L=0x00;
  3114                           	movlw	low(0)
  3115  000A6E  0E00               	movwf	((c:4054)),c	;volatile
  3116  000A70  6ED6               	line	240
  3117                           	
  3118                           i2l1200:
  3119  000A72                     ;main.c: 240:     INTCONbits.TMR0IE=1;
  3120                           	bsf	((c:4082)),c,5	;volatile
  3121  000A72  8AF2               	line	241
  3122                           	
  3123                           i2l1202:
  3124  000A74                     ;main.c: 241:     T0CONbits.TMR0ON=1;
  3125                           	bsf	((c:4053)),c,7	;volatile
  3126  000A74  8ED5               	line	242
  3127                           	
  3128                           i2l146:
  3129  000A76                     	return	;funcret
  3130  000A76  0012               	opt stack 0
  3131                           GLOBAL	__end_of_startTimer0
  3132                           	__end_of_startTimer0:
  3133  000A78                     	signat	_startTimer0,89
  3134                           	global	_startTX
  3135                           
  3136 ;; *************** function _startTX *****************
  3137 ;; Defined at:
  3138 ;;		line 213 in file "main.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0
  3152 ;;      Params:         0       0
  3153 ;;      Locals:         0       0
  3154 ;;      Temps:          4       0
  3155 ;;      Totals:         4       0
  3156 ;;Total ram usage:        4 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_ISR
  3162 ;;		_handleRX
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           psect	text15,class=CODE,space=0,reloc=2,group=0
  3166                           	line	213
  3167                           global __ptext15
  3168                           __ptext15:
  3169  0008F0                     psect	text15
  3170                           	file	"main.c"
  3171                           	line	213
  3172                           	global	__size_of_startTX
  3173                           	__size_of_startTX	equ	__end_of_startTX-_startTX
  3174  0000                     	
  3175                           _startTX:
  3176  0008F0                     ;incstack = 0
  3177                           	opt	stack 28
  3178                           	line	214
  3179                           	
  3180                           i2l1184:
  3181  0008F0                     ;main.c: 214:     while(!TXIF){
  3182                           	goto	i2l134
  3183  0008F0  EF7B  F004         	
  3184                           i2l135:
  3185  0008F4                     	line	215
  3186                           ;main.c: 215:         __nop();
  3187                           	opt	asmopt_push
  3188                           	opt	asmopt_off
  3189                           	nop
  3190  0008F4  F000               	opt	asmopt_pop
  3191                           	line	216
  3192                           ;main.c: 216:     }
  3193                           	
  3194                           i2l134:
  3195  0008F6                     	line	214
  3196                           ;main.c: 214:     while(!TXIF){
  3197                           	btfss	c:(31988/8),(31988)&7	;volatile
  3198  0008F6  A89E               	goto	i2u48_41
  3199  0008F8  EF80  F004         	goto	i2u48_40
  3200  0008FC  EF82  F004         i2u48_41:
  3201  000900                     	goto	i2l135
  3202  000900  EF7A  F004         i2u48_40:
  3203  000904                     	goto	i2l1186
  3204  000904  EF84  F004         	
  3205                           i2l136:
  3206  000908                     	line	217
  3207                           	
  3208                           i2l1186:
  3209  000908                     ;main.c: 217:     bufferTxByteSend++;
  3210                           	infsnz	((c:_bufferTxByteSend)),c
  3211  000908  4A44               	incf	((c:_bufferTxByteSend+1)),c
  3212  00090A  2A45               	line	218
  3213                           	
  3214                           i2l1188:
  3215  00090C                     ;main.c: 218:     TXREG = bufferTx[bufferTxByteSend-1];
  3216                           	movlw	low(0FFFFh)
  3217  00090C  0EFF               	movwf	(??_startTX+0+0)&0ffh,c
  3218  00090E  6E01               	movlw	high(0FFFFh)
  3219  000910  0EFF               	movwf	1+(??_startTX+0+0)&0ffh,c
  3220  000912  6E02               	movff	(c:_bufferTxByteSend),??_startTX+2+0
  3221  000914  C044  F003         	movff	(c:_bufferTxByteSend+1),??_startTX+2+0+1
  3222  000918  C045  F004         	movf	(??_startTX+0+0),c,w
  3223  00091C  5001               	addwf	(??_startTX+2+0),c
  3224  00091E  2603               	movf	(??_startTX+0+1),c,w
  3225  000920  5002               	addwfc	(??_startTX+2+1),c
  3226  000922  2204               	movlw	low(_bufferTx)
  3227  000924  0EB2               	addwf	(??_startTX+2+0),c,w
  3228  000926  2403               	movwf	c:fsr2l
  3229  000928  6ED9               	movlw	high(_bufferTx)
  3230  00092A  0E00               	addwfc	(??_startTX+2+1),c,w
  3231  00092C  2004               	movwf	1+c:fsr2l
  3232  00092E  6EDA               	movf	indf2,w
  3233  000930  50DF               	movwf	((c:4013)),c	;volatile
  3234  000932  6EAD               	line	219
  3235                           	
  3236                           i2l1190:
  3237  000934                     ;main.c: 219:     PIE1bits.TX1IE=useTxInterrupt;
  3238                           	btfsc	(c:_useTxInterrupt),c,0
  3239  000934  B048               	bra	i2u49_45
  3240  000936  D002               	bcf	((c:3997)),c,4	;volatile
  3241  000938  989D               	bra	i2u49_46
  3242  00093A  D001               	i2u49_45:
  3243  00093C                     	bsf	((c:3997)),c,4	;volatile
  3244  00093C  889D               	i2u49_46:
  3245  00093E                     
  3246                           	line	220
  3247                           	
  3248                           i2l137:
  3249  00093E                     	return	;funcret
  3250  00093E  0012               	opt stack 0
  3251                           GLOBAL	__end_of_startTX
  3252                           	__end_of_startTX:
  3253  000940                     	signat	_startTX,89
  3254                           	global	_clearBufferRx
  3255                           
  3256 ;; *************** function _clearBufferRx *****************
  3257 ;; Defined at:
  3258 ;;		line 222 in file "main.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0
  3272 ;;      Params:         0       0
  3273 ;;      Locals:         0       0
  3274 ;;      Temps:          0       0
  3275 ;;      Totals:         0       0
  3276 ;;Total ram usage:        0 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    1
  3279 ;; This function calls:
  3280 ;;		_memset
  3281 ;; This function is called by:
  3282 ;;		_handleRX
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           psect	text16,class=CODE,space=0,reloc=2,group=0
  3286                           	line	222
  3287                           global __ptext16
  3288                           __ptext16:
  3289  000A1C                     psect	text16
  3290                           	file	"main.c"
  3291                           	line	222
  3292                           	global	__size_of_clearBufferRx
  3293                           	__size_of_clearBufferRx	equ	__end_of_clearBufferRx-_clearBufferRx
  3294  0000                     	
  3295                           _clearBufferRx:
  3296  000A1C                     ;incstack = 0
  3297                           	opt	stack 26
  3298                           	line	223
  3299                           	
  3300                           i2l1192:
  3301  000A1C                     ;main.c: 223:     bufferRxSize=0;
  3302                           	movlw	high(0)
  3303  000A1C  0E00               	movwf	((c:_bufferRxSize+1)),c
  3304  000A1E  6E43               	movlw	low(0)
  3305  000A20  0E00               	movwf	((c:_bufferRxSize)),c
  3306  000A22  6E42               	line	224
  3307                           	
  3308                           i2l1194:
  3309  000A24                     ;main.c: 224:     memset(bufferRx,0,50);
  3310                           		movlw	low(_bufferRx)
  3311  000A24  0E80               	movwf	((c:memset@dest)),c
  3312  000A26  6E01               	movlw	high(_bufferRx)
  3313  000A28  0E00               	movwf	((c:memset@dest+1)),c
  3314  000A2A  6E02               
  3315                           	movlw	high(0)
  3316  000A2C  0E00               	movwf	((c:memset@c+1)),c
  3317  000A2E  6E04               	movlw	low(0)
  3318  000A30  0E00               	movwf	((c:memset@c)),c
  3319  000A32  6E03               	movlw	high(032h)
  3320  000A34  0E00               	movwf	((c:memset@n+1)),c
  3321  000A36  6E06               	movlw	low(032h)
  3322  000A38  0E32               	movwf	((c:memset@n)),c
  3323  000A3A  6E05               	call	_memset	;wreg free
  3324  000A3C  ECFB  F000         	line	225
  3325                           	
  3326                           i2l140:
  3327  000A40                     	return	;funcret
  3328  000A40  0012               	opt stack 0
  3329                           GLOBAL	__end_of_clearBufferRx
  3330                           	__end_of_clearBufferRx:
  3331  000A42                     	signat	_clearBufferRx,89
  3332                           	global	_memset
  3333                           
  3334 ;; *************** function _memset *****************
  3335 ;; Defined at:
  3336 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  dest            2    0[COMRAM] PTR void 
  3339 ;;		 -> bufferRx(50), bufferTx(50), ISR@str(20), 
  3340 ;;  c               2    2[COMRAM] int 
  3341 ;;  n               2    4[COMRAM] unsigned int 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  s               2   12[COMRAM] PTR unsigned char 
  3344 ;;		 -> bufferRx(50), bufferTx(50), ISR@str(20), 
  3345 ;;  k               2   10[COMRAM] unsigned int 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  2    0[COMRAM] PTR void 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0
  3355 ;;      Params:         6       0
  3356 ;;      Locals:         4       0
  3357 ;;      Temps:          4       0
  3358 ;;      Totals:        14       0
  3359 ;;Total ram usage:       14 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_ISR
  3365 ;;		_clearBufferRx
  3366 ;;		_clearBufferTx
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           psect	text17,class=CODE,space=0,reloc=2,group=2
  3370                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  3371                           	line	4
  3372                           global __ptext17
  3373                           __ptext17:
  3374  0001F6                     psect	text17
  3375                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
  3376                           	line	4
  3377                           	global	__size_of_memset
  3378                           	__size_of_memset	equ	__end_of_memset-_memset
  3379  0000                     	
  3380                           _memset:
  3381  0001F6                     ;incstack = 0
  3382                           	opt	stack 28
  3383                           	line	6
  3384                           	
  3385                           i2l1138:
  3386  0001F6                     		movff	(c:memset@dest),(c:memset@s)
  3387  0001F6  C001  F00D         	movff	(c:memset@dest+1),(c:memset@s+1)
  3388  0001FA  C002  F00E         
  3389                           	line	13
  3390                           	movf	((c:memset@n)),c,w
  3391  0001FE  5005               iorwf	((c:memset@n+1)),c,w
  3392  000200  1006               	btfss	status,2
  3393  000202  A4D8               	goto	i2u40_41
  3394  000204  EF06  F001         	goto	i2u40_40
  3395  000208  EF08  F001         
  3396                           i2u40_41:
  3397  00020C                     	goto	i2l1142
  3398  00020C  EF0C  F001         i2u40_40:
  3399  000210                     	goto	i2l833
  3400  000210  EFD9  F001         	
  3401                           i2l1140:
  3402  000214                     ;	Return value of _memset is never used
  3403                           	goto	i2l833
  3404  000214  EFD9  F001         	
  3405                           i2l832:
  3406  000218                     	line	14
  3407                           	
  3408                           i2l1142:
  3409  000218                     	movff	(c:memset@s),fsr2l
  3410  000218  C00D  FFD9         	movff	(c:memset@s+1),fsr2h
  3411  00021C  C00E  FFDA         	movff	(c:memset@c),indf2
  3412  000220  C003  FFDF         
  3413                           	line	15
  3414                           	
  3415                           i2l1144:
  3416  000224                     	movlw	low(0FFFFh)
  3417  000224  0EFF               	movwf	(??_memset+0+0)&0ffh,c
  3418  000226  6E07               	movlw	high(0FFFFh)
  3419  000228  0EFF               	movwf	1+(??_memset+0+0)&0ffh,c
  3420  00022A  6E08               	movff	(c:memset@n),??_memset+2+0
  3421  00022C  C005  F009         	movff	(c:memset@n+1),??_memset+2+0+1
  3422  000230  C006  F00A         	movf	(??_memset+0+0),c,w
  3423  000234  5007               	addwf	(??_memset+2+0),c
  3424  000236  2609               	movf	(??_memset+0+1),c,w
  3425  000238  5008               	addwfc	(??_memset+2+1),c
  3426  00023A  220A               	movf	(??_memset+2+0),c,w
  3427  00023C  5009               	addwf	((c:memset@s)),c,w
  3428  00023E  240D               	movwf	c:fsr2l
  3429  000240  6ED9               	movf	(??_memset+2+1),c,w
  3430  000242  500A               	addwfc	((c:memset@s+1)),c,w
  3431  000244  200E               	movwf	1+c:fsr2l
  3432  000246  6EDA               	movff	(c:memset@c),indf2
  3433  000248  C003  FFDF         
  3434                           	line	16
  3435                           		movf	((c:memset@n+1)),c,w
  3436  00024C  5006               	bnz	i2u41_41
  3437  00024E  E107               	movlw	3
  3438  000250  0E03               	subwf	 ((c:memset@n)),c,w
  3439  000252  5C05               	btfsc	status,0
  3440  000254  B0D8               	goto	i2u41_41
  3441  000256  EF2F  F001         	goto	i2u41_40
  3442  00025A  EF31  F001         
  3443                           i2u41_41:
  3444  00025E                     	goto	i2l1148
  3445  00025E  EF35  F001         i2u41_40:
  3446  000262                     	goto	i2l833
  3447  000262  EFD9  F001         	
  3448                           i2l1146:
  3449  000266                     ;	Return value of _memset is never used
  3450                           	goto	i2l833
  3451  000266  EFD9  F001         	
  3452                           i2l834:
  3453  00026A                     	line	17
  3454                           	
  3455                           i2l1148:
  3456  00026A                     	lfsr	2,01h
  3457  00026A  EE20 F001          	movf	((c:memset@s)),c,w
  3458  00026E  500D               	addwf	fsr2l
  3459  000270  26D9               	movf	((c:memset@s+1)),c,w
  3460  000272  500E               	addwfc	fsr2h
  3461  000274  22DA               	movff	(c:memset@c),indf2
  3462  000276  C003  FFDF         
  3463                           	line	18
  3464                           	lfsr	2,02h
  3465  00027A  EE20 F002          	movf	((c:memset@s)),c,w
  3466  00027E  500D               	addwf	fsr2l
  3467  000280  26D9               	movf	((c:memset@s+1)),c,w
  3468  000282  500E               	addwfc	fsr2h
  3469  000284  22DA               	movff	(c:memset@c),indf2
  3470  000286  C003  FFDF         
  3471                           	line	19
  3472                           	movlw	low(0FFFEh)
  3473  00028A  0EFE               	movwf	(??_memset+0+0)&0ffh,c
  3474  00028C  6E07               	movlw	high(0FFFEh)
  3475  00028E  0EFF               	movwf	1+(??_memset+0+0)&0ffh,c
  3476  000290  6E08               	movff	(c:memset@n),??_memset+2+0
  3477  000292  C005  F009         	movff	(c:memset@n+1),??_memset+2+0+1
  3478  000296  C006  F00A         	movf	(??_memset+0+0),c,w
  3479  00029A  5007               	addwf	(??_memset+2+0),c
  3480  00029C  2609               	movf	(??_memset+0+1),c,w
  3481  00029E  5008               	addwfc	(??_memset+2+1),c
  3482  0002A0  220A               	movf	(??_memset+2+0),c,w
  3483  0002A2  5009               	addwf	((c:memset@s)),c,w
  3484  0002A4  240D               	movwf	c:fsr2l
  3485  0002A6  6ED9               	movf	(??_memset+2+1),c,w
  3486  0002A8  500A               	addwfc	((c:memset@s+1)),c,w
  3487  0002AA  200E               	movwf	1+c:fsr2l
  3488  0002AC  6EDA               	movff	(c:memset@c),indf2
  3489  0002AE  C003  FFDF         
  3490                           	line	20
  3491                           	movlw	low(0FFFDh)
  3492  0002B2  0EFD               	movwf	(??_memset+0+0)&0ffh,c
  3493  0002B4  6E07               	movlw	high(0FFFDh)
  3494  0002B6  0EFF               	movwf	1+(??_memset+0+0)&0ffh,c
  3495  0002B8  6E08               	movff	(c:memset@n),??_memset+2+0
  3496  0002BA  C005  F009         	movff	(c:memset@n+1),??_memset+2+0+1
  3497  0002BE  C006  F00A         	movf	(??_memset+0+0),c,w
  3498  0002C2  5007               	addwf	(??_memset+2+0),c
  3499  0002C4  2609               	movf	(??_memset+0+1),c,w
  3500  0002C6  5008               	addwfc	(??_memset+2+1),c
  3501  0002C8  220A               	movf	(??_memset+2+0),c,w
  3502  0002CA  5009               	addwf	((c:memset@s)),c,w
  3503  0002CC  240D               	movwf	c:fsr2l
  3504  0002CE  6ED9               	movf	(??_memset+2+1),c,w
  3505  0002D0  500A               	addwfc	((c:memset@s+1)),c,w
  3506  0002D2  200E               	movwf	1+c:fsr2l
  3507  0002D4  6EDA               	movff	(c:memset@c),indf2
  3508  0002D6  C003  FFDF         
  3509                           	line	21
  3510                           	
  3511                           i2l1150:
  3512  0002DA                     		movf	((c:memset@n+1)),c,w
  3513  0002DA  5006               	bnz	i2u42_41
  3514  0002DC  E107               	movlw	7
  3515  0002DE  0E07               	subwf	 ((c:memset@n)),c,w
  3516  0002E0  5C05               	btfsc	status,0
  3517  0002E2  B0D8               	goto	i2u42_41
  3518  0002E4  EF76  F001         	goto	i2u42_40
  3519  0002E8  EF78  F001         
  3520                           i2u42_41:
  3521  0002EC                     	goto	i2l1154
  3522  0002EC  EF7C  F001         i2u42_40:
  3523  0002F0                     	goto	i2l833
  3524  0002F0  EFD9  F001         	
  3525                           i2l1152:
  3526  0002F4                     ;	Return value of _memset is never used
  3527                           	goto	i2l833
  3528  0002F4  EFD9  F001         	
  3529                           i2l835:
  3530  0002F8                     	line	22
  3531                           	
  3532                           i2l1154:
  3533  0002F8                     	lfsr	2,03h
  3534  0002F8  EE20 F003          	movf	((c:memset@s)),c,w
  3535  0002FC  500D               	addwf	fsr2l
  3536  0002FE  26D9               	movf	((c:memset@s+1)),c,w
  3537  000300  500E               	addwfc	fsr2h
  3538  000302  22DA               	movff	(c:memset@c),indf2
  3539  000304  C003  FFDF         
  3540                           	line	23
  3541                           	movlw	low(0FFFCh)
  3542  000308  0EFC               	movwf	(??_memset+0+0)&0ffh,c
  3543  00030A  6E07               	movlw	high(0FFFCh)
  3544  00030C  0EFF               	movwf	1+(??_memset+0+0)&0ffh,c
  3545  00030E  6E08               	movff	(c:memset@n),??_memset+2+0
  3546  000310  C005  F009         	movff	(c:memset@n+1),??_memset+2+0+1
  3547  000314  C006  F00A         	movf	(??_memset+0+0),c,w
  3548  000318  5007               	addwf	(??_memset+2+0),c
  3549  00031A  2609               	movf	(??_memset+0+1),c,w
  3550  00031C  5008               	addwfc	(??_memset+2+1),c
  3551  00031E  220A               	movf	(??_memset+2+0),c,w
  3552  000320  5009               	addwf	((c:memset@s)),c,w
  3553  000322  240D               	movwf	c:fsr2l
  3554  000324  6ED9               	movf	(??_memset+2+1),c,w
  3555  000326  500A               	addwfc	((c:memset@s+1)),c,w
  3556  000328  200E               	movwf	1+c:fsr2l
  3557  00032A  6EDA               	movff	(c:memset@c),indf2
  3558  00032C  C003  FFDF         
  3559                           	line	24
  3560                           	
  3561                           i2l1156:
  3562  000330                     		movf	((c:memset@n+1)),c,w
  3563  000330  5006               	bnz	i2u43_41
  3564  000332  E107               	movlw	9
  3565  000334  0E09               	subwf	 ((c:memset@n)),c,w
  3566  000336  5C05               	btfsc	status,0
  3567  000338  B0D8               	goto	i2u43_41
  3568  00033A  EFA1  F001         	goto	i2u43_40
  3569  00033E  EFA3  F001         
  3570                           i2u43_41:
  3571  000342                     	goto	i2l1160
  3572  000342  EFA7  F001         i2u43_40:
  3573  000346                     	goto	i2l833
  3574  000346  EFD9  F001         	
  3575                           i2l1158:
  3576  00034A                     ;	Return value of _memset is never used
  3577                           	goto	i2l833
  3578  00034A  EFD9  F001         	
  3579                           i2l836:
  3580  00034E                     	line	31
  3581                           	
  3582                           i2l1160:
  3583  00034E                     	movff	(c:memset@s),??_memset+0+0
  3584  00034E  C00D  F007         	movff	(c:memset@s+1),??_memset+0+0+1
  3585  000352  C00E  F008         	comf	(??_memset+0+0),c
  3586  000356  1E07               	comf	(??_memset+0+1),c
  3587  000358  1E08               	infsnz	(??_memset+0+0),c
  3588  00035A  4A07               	incf	(??_memset+0+1),c
  3589  00035C  2A08               	movlw	03h
  3590  00035E  0E03               	andwf	(??_memset+0+0),c,w
  3591  000360  1407               	movwf	((c:memset@k)),c
  3592  000362  6E0B               	clrf	1+((c:memset@k)),c
  3593  000364  6A0C               	line	32
  3594                           	movf	((c:memset@k)),c,w
  3595  000366  500B               	addwf	((c:memset@s)),c
  3596  000368  260D               	movf	((c:memset@k+1)),c,w
  3597  00036A  500C               	addwfc	((c:memset@s+1)),c
  3598  00036C  220E               
  3599                           	line	33
  3600                           	movf	((c:memset@k)),c,w
  3601  00036E  500B               	subwf	((c:memset@n)),c
  3602  000370  5E05               	movf	((c:memset@k+1)),c,w
  3603  000372  500C               	subwfb	((c:memset@n+1)),c
  3604  000374  5A06               
  3605                           	line	34
  3606                           	movlw	low(0FFFCh)
  3607  000376  0EFC               	andwf	((c:memset@n)),c
  3608  000378  1605               	movlw	high(0FFFCh)
  3609  00037A  0EFF               	andwf	((c:memset@n+1)),c
  3610  00037C  1606               	line	86
  3611                           	goto	i2l1168
  3612  00037E  EFCE  F001         	
  3613                           i2l838:
  3614  000382                     	
  3615                           i2l1162:
  3616  000382                     	movff	(c:memset@s),fsr2l
  3617  000382  C00D  FFD9         	movff	(c:memset@s+1),fsr2h
  3618  000386  C00E  FFDA         	movff	(c:memset@c),indf2
  3619  00038A  C003  FFDF         
  3620                           	
  3621                           i2l1164:
  3622  00038E                     	decf	((c:memset@n)),c
  3623  00038E  0605               	btfss	status,0
  3624  000390  A0D8               	decf	((c:memset@n+1)),c
  3625  000392  0606               	
  3626                           i2l1166:
  3627  000394                     	infsnz	((c:memset@s)),c
  3628  000394  4A0D               	incf	((c:memset@s+1)),c
  3629  000396  2A0E               	goto	i2l1168
  3630  000398  EFCE  F001         	
  3631                           i2l837:
  3632  00039C                     	
  3633                           i2l1168:
  3634  00039C                     	movf	((c:memset@n)),c,w
  3635  00039C  5005               iorwf	((c:memset@n+1)),c,w
  3636  00039E  1006               	btfss	status,2
  3637  0003A0  A4D8               	goto	i2u44_41
  3638  0003A2  EFD5  F001         	goto	i2u44_40
  3639  0003A6  EFD7  F001         
  3640                           i2u44_41:
  3641  0003AA                     	goto	i2l1162
  3642  0003AA  EFC1  F001         i2u44_40:
  3643  0003AE                     	goto	i2l833
  3644  0003AE  EFD9  F001         	
  3645                           i2l839:
  3646  0003B2                     	line	90
  3647                           ;	Return value of _memset is never used
  3648                           	
  3649                           i2l833:
  3650  0003B2                     	return	;funcret
  3651  0003B2  0012               	opt stack 0
  3652                           GLOBAL	__end_of_memset
  3653                           	__end_of_memset:
  3654  0003B4                     	signat	_memset,12410
  3655                           	global	___lmul
  3656                           
  3657 ;; *************** function ___lmul *****************
  3658 ;; Defined at:
  3659 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  multiplier      4    0[COMRAM] unsigned long 
  3662 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  product         4    8[COMRAM] unsigned long 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  4    0[COMRAM] unsigned long 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0
  3674 ;;      Params:         8       0
  3675 ;;      Locals:         4       0
  3676 ;;      Temps:          0       0
  3677 ;;      Totals:        12       0
  3678 ;;Total ram usage:       12 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_ISR
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           psect	text18,class=CODE,space=0,reloc=2,group=1
  3687                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3688                           	line	15
  3689                           global __ptext18
  3690                           __ptext18:
  3691  0007C4                     psect	text18
  3692                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3693                           	line	15
  3694                           	global	__size_of___lmul
  3695                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  3696  0000                     	
  3697                           ___lmul:
  3698  0007C4                     ;incstack = 0
  3699                           	opt	stack 28
  3700                           	line	119
  3701                           	
  3702                           i2l1326:
  3703  0007C4                     	movlw	low(0)
  3704  0007C4  0E00               	movwf	((c:___lmul@product)),c
  3705  0007C6  6E09               	movlw	high(0)
  3706  0007C8  0E00               	movwf	((c:___lmul@product+1)),c
  3707  0007CA  6E0A               	movlw	low highword(0)
  3708  0007CC  0E00               	movwf	((c:___lmul@product+2)),c
  3709  0007CE  6E0B               	movlw	high highword(0)
  3710  0007D0  0E00               	movwf	((c:___lmul@product+3)),c
  3711  0007D2  6E0C               	goto	i2l1328
  3712  0007D4  EFEC  F003         	line	120
  3713                           	
  3714                           i2l167:
  3715  0007D8                     	line	121
  3716                           	
  3717                           i2l1328:
  3718  0007D8                     	
  3719                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  3720  0007D8  A001               	goto	i2u69_41
  3721  0007DA  EFF1  F003         	goto	i2u69_40
  3722  0007DE  EFF3  F003         i2u69_41:
  3723  0007E2                     	goto	i2l1332
  3724  0007E2  EFFD  F003         i2u69_40:
  3725  0007E6                     	line	122
  3726                           	
  3727                           i2l1330:
  3728  0007E6                     	movf	((c:___lmul@multiplicand)),c,w
  3729  0007E6  5005               	addwf	((c:___lmul@product)),c
  3730  0007E8  2609               	movf	((c:___lmul@multiplicand+1)),c,w
  3731  0007EA  5006               	addwfc	((c:___lmul@product+1)),c
  3732  0007EC  220A               	movf	((c:___lmul@multiplicand+2)),c,w
  3733  0007EE  5007               	addwfc	((c:___lmul@product+2)),c
  3734  0007F0  220B               	movf	((c:___lmul@multiplicand+3)),c,w
  3735  0007F2  5008               	addwfc	((c:___lmul@product+3)),c
  3736  0007F4  220C               	goto	i2l1332
  3737  0007F6  EFFD  F003         	
  3738                           i2l168:
  3739  0007FA                     	line	123
  3740                           	
  3741                           i2l1332:
  3742  0007FA                     	bcf	status,0
  3743  0007FA  90D8               	rlcf	((c:___lmul@multiplicand)),c
  3744  0007FC  3605               	rlcf	((c:___lmul@multiplicand+1)),c
  3745  0007FE  3606               	rlcf	((c:___lmul@multiplicand+2)),c
  3746  000800  3607               	rlcf	((c:___lmul@multiplicand+3)),c
  3747  000802  3608               	line	124
  3748                           	
  3749                           i2l1334:
  3750  000804                     	bcf	status,0
  3751  000804  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  3752  000806  3204               	rrcf	((c:___lmul@multiplier+2)),c
  3753  000808  3203               	rrcf	((c:___lmul@multiplier+1)),c
  3754  00080A  3202               	rrcf	((c:___lmul@multiplier)),c
  3755  00080C  3201               	line	125
  3756                           	movf	((c:___lmul@multiplier)),c,w
  3757  00080E  5001               iorwf	((c:___lmul@multiplier+1)),c,w
  3758  000810  1002               iorwf	((c:___lmul@multiplier+2)),c,w
  3759  000812  1003               iorwf	((c:___lmul@multiplier+3)),c,w
  3760  000814  1004               	btfss	status,2
  3761  000816  A4D8               	goto	i2u70_41
  3762  000818  EF10  F004         	goto	i2u70_40
  3763  00081C  EF12  F004         
  3764                           i2u70_41:
  3765  000820                     	goto	i2l1328
  3766  000820  EFEC  F003         i2u70_40:
  3767  000824                     	
  3768                           i2l169:
  3769  000824                     	line	128
  3770                           	movff	(c:___lmul@product),(c:?___lmul)
  3771  000824  C009  F001         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  3772  000828  C00A  F002         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  3773  00082C  C00B  F003         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  3774  000830  C00C  F004         	line	129
  3775                           	
  3776                           i2l170:
  3777  000834                     	return	;funcret
  3778  000834  0012               	opt stack 0
  3779                           GLOBAL	__end_of___lmul
  3780                           	__end_of___lmul:
  3781  000836                     	signat	___lmul,8316
  3782                           psect	smallconst
  3783                           	db 0	; dummy byte at the end
  3784  0001F5  00                 	global	__smallconst
  3785                           	global	__mediumconst
  3786                           	GLOBAL	__activetblptr
  3787                           __activetblptr	EQU	2
  3788  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  3789                           	PSECT	rparam,class=COMRAM,space=1,noexec
  3790                           	GLOBAL	__Lrparam
  3791                           	FNCONF	rparam,??,?
  3792                           	GLOBAL	___rparam_used
  3793                           	___rparam_used EQU 1
  3794  0000                     	GLOBAL	___param_bank
  3795                           	___param_bank EQU 0
  3796  0000                     GLOBAL	__Lparam, __Hparam
  3797                           GLOBAL	__Lrparam, __Hrparam
  3798                           __Lparam	EQU	__Lrparam
  3799  0000                     __Hparam	EQU	__Hrparam
  3800  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  3801                           	global	btemp
  3802                           btemp:
  3803  00004A                     	ds	1
  3804  00004A                     	global	int$flags
  3805                           	int$flags	set btemp
  3806  0000                     	global	wtemp8
  3807                           	wtemp8 set btemp+1
  3808  0000                     	global	ttemp5
  3809                           	ttemp5 set btemp+1
  3810  0000                     	global	ttemp6
  3811                           	ttemp6 set btemp+4
  3812  0000                     	global	ttemp7
  3813                           	ttemp7 set btemp+8
  3814  0000                     	end


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         110
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     61      73
    BANK0           128      4     104

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> bufferTx(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 50
		 -> bufferTx(BANK0[50]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 50
		 -> bufferTx(BANK0[50]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 50
		 -> bufferTx(BANK0[50]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[3]), STR_1(CODE[7]), ISR@str(COMRAM[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[3]), STR_1(CODE[7]), ISR@str(COMRAM[20]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[3]), ISR@str(COMRAM[20]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 50
		 -> bufferTx(BANK0[50]), 

    memset@dest	PTR void  size(2) Largest target is 50
		 -> bufferRx(BANK0[50]), bufferTx(BANK0[50]), ISR@str(COMRAM[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 50
		 -> bufferRx(BANK0[50]), bufferTx(BANK0[50]), ISR@str(COMRAM[20]), 

    ltoa@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> ISR@str(COMRAM[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> bufferTx(BANK0[50]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 50
		 -> bufferTx(BANK0[50]), 

    sp__memset	PTR void  size(2) Largest target is 50
		 -> bufferRx(BANK0[50]), bufferTx(BANK0[50]), ISR@str(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_ltoa
    _strcat->_strcpy
    _strcpy->_strlen
    _ltoa->___lldiv
    _clearBufferTx->_memset
    _clearBufferRx->_memset

Critical Paths under _main in BANK0

    _main->_setUartInterrupt

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     304
                           _initUart
                   _setUartInterrupt
 ---------------------------------------------------------------------------------
 (1) _setUartInterrupt                                     4     0      4     304
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _initUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 32    32      0    7543
                                             29 COMRAM    32    32      0
                             ___lmul
                           _handleRX
                           _handleTX
                               _ltoa
                             _memset
                            _startTX
                         _stopTimer0
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     0      4    1018
                                             16 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     242
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                              10     6      4     400
                                              6 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _stopTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                16     8      8    1122
                                             13 COMRAM    16     8      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _handleTX                                             4     4      0    1403
                                             14 COMRAM     4     4      0
                      _clearBufferTx
 ---------------------------------------------------------------------------------
 (4) _clearBufferTx                                        0     0      0    1403
                             _memset
 ---------------------------------------------------------------------------------
 (3) _handleRX                                             7     7      0    1471
                                             14 COMRAM     7     7      0
                      _clearBufferRx
                            _startTX
                        _startTimer0
 ---------------------------------------------------------------------------------
 (4) _startTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _startTX                                              4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (4) _clearBufferRx                                        0     0      0    1403
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              14     8      6    1403
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUart
   _setUartInterrupt

 _ISR (ROOT)
   ___lmul
   _handleRX
     _clearBufferRx
       _memset
     _startTX
     _startTimer0
   _handleTX
     _clearBufferTx
       _memset
   _ltoa
     ___lldiv
     ___llmod
   _memset
   _startTX
   _stopTimer0
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen
   _strcpy
     _strlen (ARG)
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      4      68       4       81.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     3D      49       1       57.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1       5        0.0%
DATA                 0      0      B1       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Aug 05 13:23:52 2018

         _setUartInterrupt 0940     setUartInterrupt@status 00E4                         l95 0996  
                       l96 0996                         l97 099A                         l98 099A  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000                _startTimer0 0A64  
              __CFG_OSC$HS 000000                        l101 0A62                        l104 096E  
             __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000                        _ISR 0008  
                      u805 0960                        u806 0962                        u815 096C  
                      u816 096E                        _RX9 007D5E                        u795 0954  
                      u796 0956                        _TX9 007D66               __CFG_BOR$OFF 000000  
 setUartInterrupt@priority 00E6                        wreg 000FE8               __CFG_LVP$OFF 000000  
                     ?_ISR 0001               __CFG_WDT$OFF 000000                       l1400 0A42  
                     l1410 0A5A                       l1402 0A50                       l1412 0A5C  
                     l1404 0A54                       l1420 098A                       l1414 0A62  
                     l1406 0A56                       l1430 0994                       l1422 098C  
                     l1408 0A58                       l1416 0940                       l1424 098E  
                     l1426 0990                       l1418 0970                       l1428 0992  
                     STR_1 01EB                       STR_2 01F2                       _BRGH 007D62  
                     _CREN 007D5C                       _SPEN 007D5F                       _TXEN 007D65  
                     _TXIF 007CF4                       _SYNC 007D64               __CFG_PWRT$ON 000000  
             __CFG_STVR$ON 000000                       _main 0970                       _ltoa 050A  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 004A                       start 01E6              __CFG_FSCM$OFF 000000  
            __CFG_IESO$OFF 000000               ___param_bank 000000                      ??_ISR 001E  
                    ?_main 0001                      ?_ltoa 000E                      _BRG16 007D53  
          __end_of___lldiv 06B4            __end_of___llmod 0750                      i2l110 0064  
                    i2l111 0164                      i2l120 04F8                      i2l112 01C2  
                    i2l121 04CE                      i2l113 01B2                      i2l122 04AA  
                    i2l130 07BA                      i2l114 01C2                      i2l123 04E4  
                    i2l131 07C2                      i2l140 0A40                      i2l124 0500  
                    i2l117 0508                      i2l125 0508                      i2l109 0040  
                    i2l134 08F6                      i2l118 048A                      i2l135 08F4  
                    i2l119 0504                      i2l143 09CA                      i2l136 0908  
                    i2l128 0774                      i2l152 053E                      i2l137 093E  
                    i2l129 07C2                      i2l153 05E0                      i2l170 0834  
                    i2l146 0A76                      i2l154 05FA                      i2l155 05FA  
                    i2l149 0A7E                      i2l190 068E                      i2l167 07D8  
                    i2l191 06A2                      i2l168 07FA                      i2l192 06B2  
                    i2l169 0824                      i2l185 06A2                      i2l186 063A  
                    i2l187 062A                      i2l188 064C                      i2l189 0650  
                    i2l580 06D2                      i2l581 06F4                      i2l582 06F8  
                    i2l583 072A                      i2l832 0218                      i2l584 073E  
                    i2l833 03B2                      i2l585 074E                      i2l834 026A  
                    i2l578 073E                      i2l850 084A                      i2l835 02F8  
                    i2l579 06E2                      i2l851 089C                      i2l836 034E  
                    i2l852 089C                      i2l837 039C                      i2l838 0382  
                    i2l846 09F4                      i2l839 03B2                      i2l855 08B2  
                    i2l856 08AA                      i2l849 084E                      i2l857 08CE  
                    i2l858 08EE                      _RCREG 000FAE                      _TMR0L 000FD6  
                    _SPBRG 000FAF                      _TXREG 000FAD              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000        ___lmul@multiplicand 0005             __CFG_EBTR0$OFF 000000  
           __CFG_EBTR1$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000                      _timer 003E  
                    tablat 000FF5                      ltoa@c 001C            __end_of_startTX 0940  
                    ttemp5 004B                      ttemp6 004E                      ttemp7 0052  
                    status 000FD8                      wtemp8 004B             __CFG_MCLRE$OFF 000000  
          __initialization 09F6               __end_of_main 099E      __end_of_clearBufferRx 0A42  
    __end_of_clearBufferTx 09CC               __end_of_ltoa 05FC                     ??_main 00E8  
                   ??_ltoa 0016              __activetblptr 000002                     ISR@out 003A  
                   ISR@str 0026           ___llmod@dividend 0001                     i2l1200 0A72  
                   i2l1202 0A74                     i2l1210 060C                     i2l1140 0214  
                   i2l1204 099E                     i2l1300 07BA                     i2l1220 065A  
                   i2l1212 0622                     i2l1150 02DA                     i2l1142 0218  
                   i2l1206 09AE                     i2l1222 0678                     i2l1214 062A  
                   i2l1230 06B4                     i2l1310 053E                     i2l1302 0A78  
                   i2l1160 034E                     i2l1152 02F4                     i2l1144 0224  
                   i2l1224 0688                     i2l1216 063A                     i2l1208 05FC  
                   i2l1240 0716                     i2l1232 06CA                     i2l1320 05E0  
                   i2l1312 0542                     i2l1304 050A                     i2l1330 07E6  
                   i2l1162 0382                     i2l1154 02F8                     i2l1146 0266  
                   i2l1138 01F6                     i2l1250 03B8                     i2l1226 068E  
                   i2l1218 0650                     i2l1242 072A                     i2l1234 06D2  
                   i2l1314 057E                     i2l1306 0522                     i2l1170 0836  
                   i2l1322 09CC                     i2l1332 07FA                     i2l1164 038E  
                   i2l1156 0330                     i2l1148 026A                     i2l1260 0476  
                   i2l1252 03E0                     i2l1228 0698                     i2l1244 0734  
                   i2l1236 06E2                     i2l1316 05B2                     i2l1308 0532  
                   i2l1172 084E                     i2l1180 08CE                     i2l1324 09F4  
                   i2l1334 0804                     i2l1326 07C4                     i2l1166 0394  
                   i2l1158 034A                     i2l1190 0934                     i2l1270 0482  
                   i2l1262 047A                     i2l1254 03F6                     i2l1238 06F8  
                   i2l1318 05C6                     i2l1182 08EE                     i2l1174 089E  
                   i2l1350 002A                     i2l1328 07D8                     i2l1168 039C  
                   i2l1192 0A1C                     i2l1184 08F0                     i2l1280 04CE  
                   i2l1264 047C                     i2l1272 048A                     i2l1256 042C  
                   i2l1248 03B4                     i2l1176 08AA                     i2l1360 0064  
                   i2l1352 0038                     i2l1194 0A24                     i2l1186 0908  
                   i2l1282 04EC                     i2l1274 049E                     i2l1266 047E  
                   i2l1258 0462                     i2l1290 076A                     i2l1178 08B2  
                   i2l1370 0088                     i2l1362 0072                     i2l1354 0040  
                   i2l1188 090C                     i2l1196 0A64                     i2l1276 04AA  
                   i2l1284 04F8                     i2l1268 0480                     i2l1292 0770  
                   i2l1380 0124                     i2l1372 00BC                     i2l1364 0080  
                   i2l1356 004E                     i2l1198 0A6E                     i2l1278 04C6  
                   i2l1294 0774                     i2l1286 0750                     i2l1390 0172  
                   i2l1382 0138                     i2l1374 00D8                     i2l1366 0082  
                   i2l1358 005C                     i2l1296 078A                     i2l1288 0762  
                   i2l1392 0180                     i2l1384 014C                     i2l1376 00FC  
                   i2l1368 0086                     i2l1298 078E                     i2l1394 0182  
                   i2l1386 015C                     i2l1378 0110                     i2l1396 019E  
                   i2l1388 0164                     i2l1398 01B2           __end_of_handleRX 050A  
         __end_of_handleTX 07C4                     ___lmul 07C4                  ??___lldiv 0009  
                ??___llmod 0009           __end_of_initUart 0A64                     _memset 01F6  
                   clear_0 09FC                     clear_1 0A08                     _strcat 09CC  
                   _strcpy 0836                     _strlen 089E               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_startTX 0001   __end_of_setUartInterrupt 0970                 __accesstop 0080  
  __end_of__initialization 0A0E              ___rparam_used 000001             __pcstackCOMRAM 0001  
             ?_startTimer0 0001                 __pbssBANK0 0080                 __pnvCOMRAM 0048  
                  ?___lmul 0001                    ?_memset 0001             ___lmul@product 0009  
                  ?_strcat 0011                    ?_strcpy 0007                    ?_strlen 0001  
         _bufferTxByteSend 0044                    i2u40_40 0210                    i2u40_41 020C  
                  i2u41_40 0262                    i2u41_41 025E                    i2u42_40 02F0  
                  i2u50_40 0622                    i2u42_41 02EC                    i2u50_41 061E  
                  i2u43_40 0346                    i2u51_40 0648                    i2u43_41 0342  
                  i2u51_41 0644                    i2u44_40 03AE                    i2u60_40 042C  
                  i2u52_40 0678                    i2u44_41 03AA                    i2u60_41 0428  
                  i2u52_41 0674                    i2u61_40 0462                    i2u53_40 06CA  
                  i2u45_40 0886                    i2u61_41 045E                    i2u53_41 06C6  
                  i2u45_47 087C                    i2u70_40 0824                    i2u62_40 0476  
                  i2u54_40 06F0                    i2u46_40 0898                    i2u70_41 0820  
                  i2u62_41 0472                    i2u54_41 06EC                    i2u46_41 0894  
                  i2u63_40 049E                    i2u55_40 0716                    i2u47_40 08CA  
                  i2u71_40 0038                    i2u63_41 049A                    i2u55_41 0712  
                  i2u47_41 08C6                    i2u71_41 0034                    i2u48_40 0904  
                  i2u64_40 04E4                    i2u72_40 004E                    i2u48_41 0900  
                  i2u64_41 04E0                    i2u72_41 004A                    i2u65_40 0762  
                  i2u73_40 005C                    i2u65_41 075E                    i2u73_41 0058  
                  i2u49_45 093C                    i2u49_46 093E                    i2u66_40 078A  
                  i2u74_40 0072                    i2u66_41 0786                    i2u74_41 006E  
                  i2u59_40 03F6                    i2u67_40 05C6                    i2u75_40 0080  
                  i2u59_41 03F2                    i2u67_41 05C2                    i2u75_41 007C  
                  i2u68_40 05F6                    i2u76_40 0172                    i2u68_41 05F2  
                  i2u76_41 016E                    i2u69_40 07E6                    i2u77_40 0180  
                  i2u69_41 07E2                    i2u77_41 017C                  ?_handleRX 0001  
                  i2u78_40 019E                    i2u78_41 019A                  ?_handleTX 0001  
                ?_initUart 0001                    __Hparam 0000                    __Lparam 0000  
          __size_of___lmul 0072                    ___lldiv 05FC                    ___llmod 06B4  
             __psmallconst 01EA                    __pcinit 09F6            __size_of_memset 01BE  
                  __ramtop 0100                    __ptext0 0970                    __ptext1 0940  
                  __ptext2 0A42                    __ptext4 09CC                    __ptext5 089E  
                  __ptext6 0836                    __ptext7 0A78                    __ptext8 050A  
                  __ptext9 06B4                  _T0CONbits 000FD5            __size_of_strcat 002A  
          __size_of_strcpy 0068            __size_of_strlen 0052               __size_of_ISR 01DE  
               ??_handleRX 000F                 ??_handleTX 000F                    _startTX 08F0  
     end_of_initialization 0A0E                 ??_initUart 00E4                    memset@c 0003  
                  memset@k 000B                    memset@n 0005                    memset@s 000D  
            __Lmediumconst 0000                    ltoa@pos 001A               _bufferRxSize 0042  
          ___lldiv@divisor 0005               _bufferTxSize 0046            ___lldiv@counter 000D  
                  postinc0 000FEE                    postinc2 000FDE                    strcpy@d 000F  
                  strlen@a 0005                    strcpy@s 000D                    strlen@s 0001  
                _PORTAbits 000F80       __size_of_startTimer0 0014                  _TRISAbits 000F92  
                _TRISBbits 000F93          ?_setUartInterrupt 00E4     __size_of_clearBufferRx 0026  
   __size_of_clearBufferTx 002E         ??_setUartInterrupt 00E8                 _stopTimer0 0A78  
           __end_of___lmul 0836             __end_of_memset 03B4             __end_of_strcat 09F6  
           __end_of_strcpy 089E             __end_of_strlen 08F0        start_initialization 09F6  
              __end_of_ISR 01E6            ___llmod@divisor 0005            ___llmod@counter 0009  
                 ??___lmul 0009              _clearBufferRx 0A1C              _clearBufferTx 099E  
                 ??_memset 0007                 memset@dest 0001                   ??_strcat 0015  
                 ??_strcpy 000B                   ??_strlen 0003                __pbssCOMRAM 003E  
            __pcstackBANK0 00E4          __size_of_handleRX 0156          __size_of_handleTX 0074  
             ltoa@buffSize 0010                ?_stopTimer0 0001          __size_of_initUart 0022  
               ltoa@buffer 000E                  __pintcode 0008             ?_clearBufferRx 0001  
           ?_clearBufferTx 0001                   ?___lldiv 0001                   ?___llmod 0001  
             ltoa@original 0016                __smallconst 01EA                   ?_startTX 0001  
                 _IPR1bits 000F9F                   _PIE1bits 000F9D                   _PIR1bits 000F9E  
                handleRX@i 0014                   _RCONbits 000FD0           __CFG_WDTPS$32768 000000  
               _ADCON1bits 000FC1        __size_of_stopTimer0 0008          ___lmul@multiplier 0001  
                 __Hrparam 0000            ??_clearBufferRx 000F            ??_clearBufferTx 000F  
                 __Lrparam 0000  __size_of_setUartInterrupt 0030           __size_of___lldiv 00B8  
         __size_of___llmod 009C              ??_startTimer0 0001                 strcat@dest 0011  
                ltoa@value 0012                   _handleRX 03B4                   _handleTX 0750  
                 __ptext10 05FC                   __ptext11 0750                   __ptext12 099E  
                 __ptext13 03B4                   __ptext14 0A64                   __ptext15 08F0  
                 __ptext16 0A1C                   __ptext17 01F6                   __ptext18 07C4  
                 _bufferRx 0080                   _bufferTx 00B2           __size_of_startTX 0050  
               strcpy@dest 0007                   _initUart 0A42              __size_of_main 002E  
            __size_of_ltoa 00F2                   int$flags 004A                 _INTCONbits 000FF2  
      __end_of_startTimer0 0A78                   intlevel2 0000                  strcat@src 0013  
         ___lldiv@dividend 0001               ??_stopTimer0 0001                  strcpy@src 0009  
         ___lldiv@quotient 0009         __end_of_stopTimer0 0A80             _useTxInterrupt 0048  
